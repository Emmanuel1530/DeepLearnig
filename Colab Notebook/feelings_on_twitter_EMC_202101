{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"feelings_on_twitter_EMC_202101","provenance":[],"mount_file_id":"1QwwPdpctT9EogRL3X83cwTotRpfs19uZ","authorship_tag":"ABX9TyN7De69Rr76Rt/FID3Pch29"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","metadata":{"id":"VVDrbpnFV-KL"},"source":["##Habilitar drive\n","\n","\n"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BT0aosGpWCZn","executionInfo":{"status":"ok","timestamp":1620315746748,"user_tz":300,"elapsed":427,"user":{"displayName":"Emmanuel Mosquera Casas","photoUrl":"","userId":"16600618469783398935"}},"outputId":"7797470b-f14e-4b11-ef88-c9c2dd76934f"},"source":["from google.colab import drive\n","drive.mount('/content/drive')"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"_PPes_moCsPn"},"source":["#Obtener dataset de twitter Trabajo de clase, se sube a git\n"]},{"cell_type":"code","metadata":{"id":"gS7sHX9gCXdg"},"source":["import os\n","import tweepy as tw\n","import pandas as pd"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"997uQKjcDYvK"},"source":["P1. configuracion de la API de twitter\n"]},{"cell_type":"code","metadata":{"id":"GGQs1P1fDf1S"},"source":["consumer_key= 'TchFsK1CO5xnzbmYsMypG1udc'\n","consumer_secret= 'LRssCsCA9LeS6GjZjHpc0UAdQMY1sGOYY6pD3ItIQKLSI6HkA6'\n","access_token= '1387915139245121538-Qxcp0RRpuAGxARdgEIsPrjJp7cya40'\n","access_token_secret= '4XV6Jt2U555MdxsZXDzb3lnzGuRJLYZ66zv0DZy63jqfr'\n","\n","auth = tw.OAuthHandler(consumer_key, consumer_secret)\n","auth.set_access_token(access_token, access_token_secret)\n","api = tw.API(auth, wait_on_rate_limit=True)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"tMDI2gAH1vCS"},"source":["P2.Postear un tweet desde Python"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nU0ebExv143l","executionInfo":{"status":"ok","timestamp":1620174130909,"user_tz":300,"elapsed":718,"user":{"displayName":"Emmanuel Mosquera Casas","photoUrl":"","userId":"16600618469783398935"}},"outputId":"f85ebc6a-c2ad-4f86-e4fd-bcb001ce22d5"},"source":["api.update_status(\"#USTATUNJA, subiendo mi tercer tweet desde PYTHON\")"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Status(_api=<tweepy.api.API object at 0x7f131f8f6e50>, _json={'created_at': 'Wed May 05 00:22:10 +0000 2021', 'id': 1389737148383961089, 'id_str': '1389737148383961089', 'text': '#USTATUNJA, subiendo mi tercer tweet desde PYTHON', 'truncated': False, 'entities': {'hashtags': [{'text': 'USTATUNJA', 'indices': [0, 10]}], 'symbols': [], 'user_mentions': [], 'urls': []}, 'source': '<a href=\"https://help.twitter.com/en/using-twitter/how-to-tweet#source-labels\" rel=\"nofollow\">usta_deepLearning</a>', 'in_reply_to_status_id': None, 'in_reply_to_status_id_str': None, 'in_reply_to_user_id': None, 'in_reply_to_user_id_str': None, 'in_reply_to_screen_name': None, 'user': {'id': 1387915139245121538, 'id_str': '1387915139245121538', 'name': 'emmanuel m', 'screen_name': 'emmanue77399651', 'location': '', 'description': '#Estudiante\\n#IngenieriaDeSistemas\\n#ustaTunja', 'url': None, 'entities': {'description': {'urls': []}}, 'protected': False, 'followers_count': 2, 'friends_count': 1, 'listed_count': 0, 'created_at': 'Thu Apr 29 23:42:23 +0000 2021', 'favourites_count': 1, 'utc_offset': None, 'time_zone': None, 'geo_enabled': False, 'verified': False, 'statuses_count': 4, 'lang': None, 'contributors_enabled': False, 'is_translator': False, 'is_translation_enabled': False, 'profile_background_color': 'F5F8FA', 'profile_background_image_url': None, 'profile_background_image_url_https': None, 'profile_background_tile': False, 'profile_image_url': 'http://pbs.twimg.com/profile_images/1387915297324163072/ww8-yFmO_normal.jpg', 'profile_image_url_https': 'https://pbs.twimg.com/profile_images/1387915297324163072/ww8-yFmO_normal.jpg', 'profile_link_color': '1DA1F2', 'profile_sidebar_border_color': 'C0DEED', 'profile_sidebar_fill_color': 'DDEEF6', 'profile_text_color': '333333', 'profile_use_background_image': True, 'has_extended_profile': True, 'default_profile': True, 'default_profile_image': False, 'following': False, 'follow_request_sent': False, 'notifications': False, 'translator_type': 'none', 'withheld_in_countries': []}, 'geo': None, 'coordinates': None, 'place': None, 'contributors': None, 'is_quote_status': False, 'retweet_count': 0, 'favorite_count': 0, 'favorited': False, 'retweeted': False, 'lang': 'fr'}, created_at=datetime.datetime(2021, 5, 5, 0, 22, 10), id=1389737148383961089, id_str='1389737148383961089', text='#USTATUNJA, subiendo mi tercer tweet desde PYTHON', truncated=False, entities={'hashtags': [{'text': 'USTATUNJA', 'indices': [0, 10]}], 'symbols': [], 'user_mentions': [], 'urls': []}, source='usta_deepLearning', source_url='https://help.twitter.com/en/using-twitter/how-to-tweet#source-labels', in_reply_to_status_id=None, in_reply_to_status_id_str=None, in_reply_to_user_id=None, in_reply_to_user_id_str=None, in_reply_to_screen_name=None, author=User(_api=<tweepy.api.API object at 0x7f131f8f6e50>, _json={'id': 1387915139245121538, 'id_str': '1387915139245121538', 'name': 'emmanuel m', 'screen_name': 'emmanue77399651', 'location': '', 'description': '#Estudiante\\n#IngenieriaDeSistemas\\n#ustaTunja', 'url': None, 'entities': {'description': {'urls': []}}, 'protected': False, 'followers_count': 2, 'friends_count': 1, 'listed_count': 0, 'created_at': 'Thu Apr 29 23:42:23 +0000 2021', 'favourites_count': 1, 'utc_offset': None, 'time_zone': None, 'geo_enabled': False, 'verified': False, 'statuses_count': 4, 'lang': None, 'contributors_enabled': False, 'is_translator': False, 'is_translation_enabled': False, 'profile_background_color': 'F5F8FA', 'profile_background_image_url': None, 'profile_background_image_url_https': None, 'profile_background_tile': False, 'profile_image_url': 'http://pbs.twimg.com/profile_images/1387915297324163072/ww8-yFmO_normal.jpg', 'profile_image_url_https': 'https://pbs.twimg.com/profile_images/1387915297324163072/ww8-yFmO_normal.jpg', 'profile_link_color': '1DA1F2', 'profile_sidebar_border_color': 'C0DEED', 'profile_sidebar_fill_color': 'DDEEF6', 'profile_text_color': '333333', 'profile_use_background_image': True, 'has_extended_profile': True, 'default_profile': True, 'default_profile_image': False, 'following': False, 'follow_request_sent': False, 'notifications': False, 'translator_type': 'none', 'withheld_in_countries': []}, id=1387915139245121538, id_str='1387915139245121538', name='emmanuel m', screen_name='emmanue77399651', location='', description='#Estudiante\\n#IngenieriaDeSistemas\\n#ustaTunja', url=None, entities={'description': {'urls': []}}, protected=False, followers_count=2, friends_count=1, listed_count=0, created_at=datetime.datetime(2021, 4, 29, 23, 42, 23), favourites_count=1, utc_offset=None, time_zone=None, geo_enabled=False, verified=False, statuses_count=4, lang=None, contributors_enabled=False, is_translator=False, is_translation_enabled=False, profile_background_color='F5F8FA', profile_background_image_url=None, profile_background_image_url_https=None, profile_background_tile=False, profile_image_url='http://pbs.twimg.com/profile_images/1387915297324163072/ww8-yFmO_normal.jpg', profile_image_url_https='https://pbs.twimg.com/profile_images/1387915297324163072/ww8-yFmO_normal.jpg', profile_link_color='1DA1F2', profile_sidebar_border_color='C0DEED', profile_sidebar_fill_color='DDEEF6', profile_text_color='333333', profile_use_background_image=True, has_extended_profile=True, default_profile=True, default_profile_image=False, following=False, follow_request_sent=False, notifications=False, translator_type='none', withheld_in_countries=[]), user=User(_api=<tweepy.api.API object at 0x7f131f8f6e50>, _json={'id': 1387915139245121538, 'id_str': '1387915139245121538', 'name': 'emmanuel m', 'screen_name': 'emmanue77399651', 'location': '', 'description': '#Estudiante\\n#IngenieriaDeSistemas\\n#ustaTunja', 'url': None, 'entities': {'description': {'urls': []}}, 'protected': False, 'followers_count': 2, 'friends_count': 1, 'listed_count': 0, 'created_at': 'Thu Apr 29 23:42:23 +0000 2021', 'favourites_count': 1, 'utc_offset': None, 'time_zone': None, 'geo_enabled': False, 'verified': False, 'statuses_count': 4, 'lang': None, 'contributors_enabled': False, 'is_translator': False, 'is_translation_enabled': False, 'profile_background_color': 'F5F8FA', 'profile_background_image_url': None, 'profile_background_image_url_https': None, 'profile_background_tile': False, 'profile_image_url': 'http://pbs.twimg.com/profile_images/1387915297324163072/ww8-yFmO_normal.jpg', 'profile_image_url_https': 'https://pbs.twimg.com/profile_images/1387915297324163072/ww8-yFmO_normal.jpg', 'profile_link_color': '1DA1F2', 'profile_sidebar_border_color': 'C0DEED', 'profile_sidebar_fill_color': 'DDEEF6', 'profile_text_color': '333333', 'profile_use_background_image': True, 'has_extended_profile': True, 'default_profile': True, 'default_profile_image': False, 'following': False, 'follow_request_sent': False, 'notifications': False, 'translator_type': 'none', 'withheld_in_countries': []}, id=1387915139245121538, id_str='1387915139245121538', name='emmanuel m', screen_name='emmanue77399651', location='', description='#Estudiante\\n#IngenieriaDeSistemas\\n#ustaTunja', url=None, entities={'description': {'urls': []}}, protected=False, followers_count=2, friends_count=1, listed_count=0, created_at=datetime.datetime(2021, 4, 29, 23, 42, 23), favourites_count=1, utc_offset=None, time_zone=None, geo_enabled=False, verified=False, statuses_count=4, lang=None, contributors_enabled=False, is_translator=False, is_translation_enabled=False, profile_background_color='F5F8FA', profile_background_image_url=None, profile_background_image_url_https=None, profile_background_tile=False, profile_image_url='http://pbs.twimg.com/profile_images/1387915297324163072/ww8-yFmO_normal.jpg', profile_image_url_https='https://pbs.twimg.com/profile_images/1387915297324163072/ww8-yFmO_normal.jpg', profile_link_color='1DA1F2', profile_sidebar_border_color='C0DEED', profile_sidebar_fill_color='DDEEF6', profile_text_color='333333', profile_use_background_image=True, has_extended_profile=True, default_profile=True, default_profile_image=False, following=False, follow_request_sent=False, notifications=False, translator_type='none', withheld_in_countries=[]), geo=None, coordinates=None, place=None, contributors=None, is_quote_status=False, retweet_count=0, favorite_count=0, favorited=False, retweeted=False, lang='fr')"]},"metadata":{"tags":[]},"execution_count":41}]},{"cell_type":"markdown","metadata":{"id":"YNXgZLlCjB50"},"source":["P3.Acceso a la API de Twitter desde Python"]},{"cell_type":"code","metadata":{"id":"xUzboWmVjErK"},"source":["# Definir el termino de la busqueda y la fecha de inicio\n","search_words = \"#SOSColombiaDDHH\"\n","date_since = \"2021-05-01\""],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"klKwt5CKjqMp"},"source":["P3.Collecional tweets"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CEZviUFTjn5K","executionInfo":{"status":"ok","timestamp":1620171807799,"user_tz":300,"elapsed":626,"user":{"displayName":"Emmanuel Mosquera Casas","photoUrl":"","userId":"16600618469783398935"}},"outputId":"794dc905-2375-4018-b9f1-4846ca4f4ea8"},"source":["tweets = tw.Cursor(api.search,\n","q=search_words,\n","lang=\"es\",\n","since=date_since).items(10000)\n","tweets"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<tweepy.cursor.ItemIterator at 0x7f1328eb39d0>"]},"metadata":{"tags":[]},"execution_count":6}]},{"cell_type":"markdown","metadata":{"id":"IGc-k2Wjj5BW"},"source":["VISUALISAR"]},{"cell_type":"code","metadata":{"id":"vG2Jmy_ij6nk"},"source":["[tweet.text for tweet in tweets]"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"pntj43oDxlyU"},"source":["\n","\n","consulta Completa"]},{"cell_type":"code","metadata":{"id":"g_t_qOjsymDL"},"source":["#Definir el termino de la busqueda y la fecha de inicio \n","search_words='#SOSColombiaDDHH'\n","date_since='2021-05-01'"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":36},"id":"s7si42DaypIz","executionInfo":{"status":"ok","timestamp":1620311954350,"user_tz":300,"elapsed":477,"user":{"displayName":"Emmanuel Mosquera Casas","photoUrl":"","userId":"16600618469783398935"}},"outputId":"3c455543-405f-4339-cd33-9b19bfb6a544"},"source":["#para que no tome los tweets que estar retweets \n","new_search=search_words+\"-filter:retweets\"\n","new_search"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'#SOSColombiaDDHH-filter:retweets'"]},"metadata":{"tags":[]},"execution_count":4}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rTYiOwxUxqF7","executionInfo":{"status":"ok","timestamp":1620311961317,"user_tz":300,"elapsed":682,"user":{"displayName":"Emmanuel Mosquera Casas","photoUrl":"","userId":"16600618469783398935"}},"outputId":"e082cf28-3314-422c-a708-2f28831046c3"},"source":["#Collecional tweets \n","tweets=tw.Cursor(api.search,\n","q=new_search,\n","lang=\"es\",\n","since=date_since).items(10)\n","tweets"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<tweepy.cursor.ItemIterator at 0x7fad7fa89cd0>"]},"metadata":{"tags":[]},"execution_count":5}]},{"cell_type":"code","metadata":{"id":"Mj6vZ5Tzy7Er"},"source":["[tweet.text for tweet in tweets]\n","#No es necesario, solo usar de visualizacion"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"4eBBTvpv1dyb"},"source":["Convertimos los tweets en una Dataframe"]},{"cell_type":"code","metadata":{"id":"XOVCKB3I1Oxx"},"source":["data_frame = [[tweet.user.screen_name, tweet.user.location,tweet.text] for tweet in tweets]\n","tw_dataframe = pd.DataFrame(data= data_frame , columns=[\"user\",\"location\",\"text\"])\n","tw_dataframe\n","#guardamos el dataframe en un CSV\n","tw_dataframe.to_csv('/content/drive/MyDrive/Colab Notebooks/DataTwitter/SOSColombiaDDHH.csv', index=False, encoding='utf-8')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"j1j_mByt4DRM","colab":{"base_uri":"https://localhost:8080/","height":424},"executionInfo":{"status":"ok","timestamp":1620176271186,"user_tz":300,"elapsed":600,"user":{"displayName":"Emmanuel Mosquera Casas","photoUrl":"","userId":"16600618469783398935"}},"outputId":"d19cab22-01a1-47ec-bd9b-5faaf364cf0e"},"source":["tw_dataframe.head(100)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>user</th>\n","      <th>location</th>\n","      <th>text</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>vickyanq</td>\n","      <td></td>\n","      <td>ASÍ NO SEAN DE COLOMBIA, COPIEN Y PEGUEN\\n @ON...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>MamerDread</td>\n","      <td></td>\n","      <td>El gobierno inservible y narco paramilitarmata...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>El_CorruptoSoy</td>\n","      <td>𝔼𝕃 𝕄𝕌ℕ𝔻𝕆</td>\n","      <td>Uniformados de la @PoliciaColombia ya expresan...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>MolinaNana8712</td>\n","      <td>Bogotá, D.C., Colombia</td>\n","      <td>El apoyo al pueblo es grande!!!\\n#SOSColombiaD...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Purpose_Kat</td>\n","      <td></td>\n","      <td>⚠️DIFUNDIR⚠️\\nEstos son links de cuentas en In...</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>95</th>\n","      <td>Darkvid21</td>\n","      <td>Ensenada, Baja California</td>\n","      <td>@Jahfrann No soy de Colombia, pero aun así ten...</td>\n","    </tr>\n","    <tr>\n","      <th>96</th>\n","      <td>RED_OBRERA</td>\n","      <td>Caracas, Venezuela</td>\n","      <td>#4Mayo \\n#SOSColombiaDDHH \\n#DuqueAsesino \\n#F...</td>\n","    </tr>\n","    <tr>\n","      <th>97</th>\n","      <td>JUANCAELBROKY</td>\n","      <td>Colombia</td>\n","      <td>Desde Santiago, Chile, las personas se manifie...</td>\n","    </tr>\n","    <tr>\n","      <th>98</th>\n","      <td>aliasyorki</td>\n","      <td>Medellín</td>\n","      <td>#SOSColombiaDDHH #NosEstanMatando #ColombiaRes...</td>\n","    </tr>\n","    <tr>\n","      <th>99</th>\n","      <td>DirectordeOper1</td>\n","      <td></td>\n","      <td>“En Colombia no hay garantía para la vida, ni ...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>100 rows × 3 columns</p>\n","</div>"],"text/plain":["               user  ...                                               text\n","0          vickyanq  ...  ASÍ NO SEAN DE COLOMBIA, COPIEN Y PEGUEN\\n @ON...\n","1        MamerDread  ...  El gobierno inservible y narco paramilitarmata...\n","2    El_CorruptoSoy  ...  Uniformados de la @PoliciaColombia ya expresan...\n","3    MolinaNana8712  ...  El apoyo al pueblo es grande!!!\\n#SOSColombiaD...\n","4       Purpose_Kat  ...  ⚠️DIFUNDIR⚠️\\nEstos son links de cuentas en In...\n","..              ...  ...                                                ...\n","95        Darkvid21  ...  @Jahfrann No soy de Colombia, pero aun así ten...\n","96       RED_OBRERA  ...  #4Mayo \\n#SOSColombiaDDHH \\n#DuqueAsesino \\n#F...\n","97    JUANCAELBROKY  ...  Desde Santiago, Chile, las personas se manifie...\n","98       aliasyorki  ...  #SOSColombiaDDHH #NosEstanMatando #ColombiaRes...\n","99  DirectordeOper1  ...  “En Colombia no hay garantía para la vida, ni ...\n","\n","[100 rows x 3 columns]"]},"metadata":{"tags":[]},"execution_count":58}]},{"cell_type":"markdown","metadata":{"id":"9L7XXIzT7SYO"},"source":["#P0. Obtener corpus : Convirtiendo XML a CSV"]},{"cell_type":"code","metadata":{"id":"_l60YzCW7U1h"},"source":["#librerias necesarias\n","import xml.etree.ElementTree as etree\n","import csv\n","from os import scandir\n","from sklearn.model_selection import train_test_split"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"wgT5yEaVU8o3"},"source":["Funcion para listar archivos de un directorio"]},{"cell_type":"code","metadata":{"id":"uTRiiIkZU6pq"},"source":["# importing os module  \n","import os \n","#listado_de_archivos_desde_un_path\n","def files_of_path(path): \n","    return [obj.name for obj in os.scandir(path) if obj.is_file()]\n","    \n","files= files_of_path(\"/content/drive/MyDrive/Colab Notebooks/IA/Analisis_sentimientos_Twitter/datasets/Corpus/tass_2017\")\n","for file in files:\n","    print(file)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"YllodILsXfMR"},"source":["función para convertir listas en archivos CSV"]},{"cell_type":"code","metadata":{"id":"cY8g836FXftv"},"source":["def list_to_csv(data, filename):\n","  with open(filename, 'w', encoding='utf-8') as csvfile:\n","    writer = csv.writer(csvfile, delimiter=',', lineterminator='\\n', quoting=csv.QUOTE_NONNUMERIC)\n","    writer.writerows(data)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"pBDV_lC0Xkaf"},"source":["función para cargar de un CSV a una LISTA (messages | labels)"]},{"cell_type":"code","metadata":{"id":"-7vZPDz6Xk-5"},"source":["def csv_to_lists(filename):\n","  messages = []\n","  labels = []\n","  with open(filename, 'r', encoding='utf-8') as csvfile:\n","    reader = csv.reader(csvfile, delimiter=',')\n","    for row in reader:\n","      messages.append(row[1])\n","      labels.append(row[2])\n","  return messages, labels"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"DTJWWjmzX6vv"},"source":["#funciones para prasear xml en un dataframe"]},{"cell_type":"markdown","metadata":{"id":"bU667y8OYLKf"},"source":["corpus de general tweetid | content | sentiments/polarity/value"]},{"cell_type":"code","metadata":{"id":"bpJbNy5SX8nA"},"source":["def general_tass_to_list(filename):\n","  tree = etree.parse(filename)\n","  root = tree.getroot()\n","  data = []\n","\n","  for tweet in root:\n","    tweetId = tweet.find('tweetid').text\n","    content = tweet.find('content').text\n","    polarityValue = tweet.find('sentiments/polarity/value').text\n","    data.append([tweetId, content.replace('\\n',' '), polarityValue])\n","  return data"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"9ZtxDr6RYRbX"},"source":["def general_tass_2017_to_list(filename,qrel=None):\n","  tree = etree.parse(filename)\n","  root = tree.getroot()\n","  data = []\n","\n","  for tweet in root:\n","    tweetId = tweet.find('tweetid').text\n","    content = tweet.find('content').text\n","    polarityValue = qrel[tweetId]\n","    data.append([tweetId, content.replace('\\n',' '), polarityValue])\n","\n","  return data"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"N9haWVJNYaCH"},"source":["Corpus politics tweetid | content | sentiments/polarity"]},{"cell_type":"code","metadata":{"id":"zZiSGxDSYawm"},"source":["def politics_tass_to_list(filename):\n","  tree = etree.parse(filename)\n","  root = tree.getroot()\n","  data = []\n","\n","  for tweet in root:\n","    tweetId = tweet.find('tweetid').text\n","    content = tweet.find('content').text\n","    aux = next((e for e in tweet.findall('sentiments/polarity') if e.find('entity') == None), None)\n","    if aux != None:\n","      polarityValue = aux.find('value').text\n","      data.append([tweetId, content.replace('\\n',' '), polarityValue])\n","  return data"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"ayW7wAT2YkX_"},"source":["corpus de internacional tweetid | content | sentiments/polarity/value"]},{"cell_type":"code","metadata":{"id":"X5baFofCYlMn"},"source":["def intertass_tass_to_list(filename, qrel=None):\n","  tree = etree.parse(filename)\n","  root = tree.getroot()\n","  data = []\n","\n","  for tweet in root:\n","    tweetId = tweet.find('tweetid').text\n","    content = tweet.find('content').text\n","    polarityValue = tweet.find('sentiment/polarity/value').text\n","    if polarityValue == None:\n","      polarityValue = qrel[tweetId]\n","      data.append([tweetId, content.replace('\\n',' '), polarityValue])\n","  return data"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"j2MUgBJOY20m"},"source":["funcion para unir los tweets corpus general test con sus sentimientos"]},{"cell_type":"code","metadata":{"id":"OF6I5V8eY0Jm"},"source":["#Listar los id tweets | sentiment :P (Positivo) - N (Negativo) - NEU (NEUtro) - NONE (sin sentimiento)\n","def gold_standard_to_dict(filename):\n","  with open(filename, 'r') as csvfile:\n","    reader = csv.reader(csvfile, delimiter='\\t')\n","    data = {rows[0]: rows[1] for rows in reader}\n","\n","  return data"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"wtffWfyVZKwH"},"source":["Función para separar el 100% del corpus entre: Train : 70% - Test: 30%"]},{"cell_type":"code","metadata":{"id":"si_odYA_ZLd_"},"source":["def generate_train_test_subsets(data, size):\n","  codes = [d[0] for d in data]\n","  labels = [d[2] for d in data]\n","  codes_train, codes_test, labels_train, labels_test = train_test_split(codes, labels, train_size=size)\n","  train_data = [d for d in data if d[0] in codes_train]\n","  test_data = [d for d in data if d[0] in codes_test]\n","  return train_data, test_data"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"W3Sz2H6WZyv4"},"source":["Ejecutar cada función de parsear los corpus y guardarlo en un CSV (full, train, test)"]},{"cell_type":"code","metadata":{"id":"zTcq2xtsZwg6"},"source":["data = []\n","\n","#Parceamos el internacional TASS\n","#tomamos el corpus internacional (test) y generamos una lista del ID del tweet y el sentimiento para agregarlo a la data\n","qrel = gold_standard_to_dict(\"/content/drive/MyDrive/Colab Notebooks/IA/Analisis_sentimientos_Twitter/datasets/Corpus/tass_2017/InterTASS/InterTASS_Test_res.qrel\")\n","#como el test del corpus internacional esta sin los sentimientos es necesario agregarlos : qrel\n","data.extend(intertass_tass_to_list(\"/content/drive/MyDrive/Colab Notebooks/IA/Analisis_sentimientos_Twitter/datasets/Corpus/tass_2017/InterTASS/InterTASS_Test.xml\", qrel))\n","data.extend(intertass_tass_to_list(\"/content/drive/MyDrive/Colab Notebooks/IA/Analisis_sentimientos_Twitter/datasets/Corpus/tass_2017/InterTASS/InterTASS_development.xml\"))\n","data.extend(intertass_tass_to_list(\"/content/drive/MyDrive/Colab Notebooks/IA/Analisis_sentimientos_Twitter/datasets/Corpus/tass_2017/InterTASS/InterTASS_Training.xml\"))\n","#Parceamos el General\n","#NO-data.extend(DatasetHelper.general_tass_to_list(\"../datasets/tass_2017/InterTASS/general-test-tagged-3l.xml\"))\n","#NO-data.extend(DatasetHelper.general_tass_to_list(\"../datasets/tass_2017/InterTASS/general-train-tagged-3l.xml\"))\n","qrel = gold_standard_to_dict(\"/content/drive/MyDrive/Colab Notebooks/IA/Analisis_sentimientos_Twitter/datasets/Corpus/tass_2017/General Corpus of TASS/general-sentiment-3l.qrel\")\n","data.extend(general_tass_2017_to_list(\"/content/drive/MyDrive/Colab Notebooks/IA/Analisis_sentimientos_Twitter/datasets/Corpus/tass_2017/General Corpus of TASS/general-tweets-test.xml\", qrel))\n","#Parceamos el STOMPOL (politica)\n","data.extend(politics_tass_to_list(\"/content/drive/MyDrive/Colab Notebooks/IA/Analisis_sentimientos_Twitter/datasets/Corpus/tass_2014/politics-test-tagged.xml\"))\n","#separamos la data en train = 70%  | test = 30#\n","test, train  = generate_train_test_subsets(data, size=0.3)\n","list_to_csv(data,\"/content/dataset_2017_full.csv\")\n","list_to_csv(train, '/content/dataset_2017_train.csv')\n","list_to_csv(test, '/content/dataset_2017_test.csv')"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"7z1RIr1SfOjy"},"source":["#P1. Preprocesamiento del corpus"]},{"cell_type":"markdown","metadata":{"id":"AGU3USznfWvv"},"source":["Cargar librerías necesarias"]},{"cell_type":"code","metadata":{"id":"LRt7z4NkfPk_","executionInfo":{"status":"ok","timestamp":1620345893867,"user_tz":300,"elapsed":2323,"user":{"displayName":"Emmanuel Mosquera Casas","photoUrl":"","userId":"16600618469783398935"}}},"source":["import re                                #operaciones regulares para la búsqueda y manipulación de cadenas\n","from nltk import TweetTokenizer          #libreria para tokenizar\n","from nltk.stem import SnowballStemmer    #algoritmo para clasificación de palabras\n","#variables para mejorar la escritura (opcional)\n","NORMALIZE = 'normalize'\n","REMOVE = 'remove'\n","MENTION = 'twmention'\n","HASHTAG = 'twhashtag'\n","URL = 'twurl'\n","LAUGH = 'twlaugh'\n","\n","#definir que el algoritmo de clasificación use el idioma español\n","_stemmer = SnowballStemmer('spanish')\n","\n","#definir una variable para la funcion de tokenizar (opcional)\n","_tokenizer = TweetTokenizer().tokenize\n","\n","#variable para definir si quiero normalizar: normalize o eliminar: remove los hashtags, menciones y urls en los tweets\n","_twitter_features=\"normalize\"\n","#variable para definir si se desea tener convertir o no a la raiz de la palabra.\n","_stemming=False"],"execution_count":12,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"QAMbd3ZdfXgv"},"source":["##funciones/métodos de preprocesamiento"]},{"cell_type":"markdown","metadata":{"id":"Aqea3UXOfZOA"},"source":["listas de conversión (quitar tildes y palabras coloquiales)"]},{"cell_type":"code","metadata":{"id":"bi69nz8BfdNH","executionInfo":{"status":"ok","timestamp":1620345893892,"user_tz":300,"elapsed":2343,"user":{"displayName":"Emmanuel Mosquera Casas","photoUrl":"","userId":"16600618469783398935"}}},"source":["#lista de conversión para quitar las tildes a las vocales.\n","DIACRITICAL_VOWELS = [('á','a'), ('é','e'), ('í','i'), ('ó','o'), ('ú','u'), ('ü','u')]\n","\n","#lista para corregir algunas palabras coloquiales / jerga en español (obviamente faltan más)\n","SLANG = [('d','de'), ('[qk]','que'), ('xo','pero'), ('xa', 'para'), ('[xp]q','porque'),('es[qk]', 'es que'),\n","         ('fvr','favor'),('(xfa|xf|pf|plis|pls|porfa)', 'por favor'), ('dnd','donde'), ('tb', 'también'),\n","         ('(tq|tk)', 'te quiero'), ('(tqm|tkm)', 'te quiero mucho'), ('x','por'), ('\\+','mas')]"],"execution_count":13,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"GHLT-avegmGv"},"source":["funcion/método de normalización de risas"]},{"cell_type":"code","metadata":{"id":"Ap9Txbd7gp7O","executionInfo":{"status":"ok","timestamp":1620345893893,"user_tz":300,"elapsed":2335,"user":{"displayName":"Emmanuel Mosquera Casas","photoUrl":"","userId":"16600618469783398935"}}},"source":["#metodo para normalizar las risas\n","def normalize_laughs(message):\n","  message = re.sub(r'\\b(?=\\w*[j])[aeiouj]{4,}\\b', LAUGH, message, flags=re.IGNORECASE)\n","  message = re.sub(r'\\b(?=\\w*[k])[aeiouk]{4,}\\b', LAUGH, message, flags=re.IGNORECASE)\n","  message = re.sub(r'\\b(?=\\w*[h])[aeiouk]{4,}\\b', LAUGH, message, flags=re.IGNORECASE)\n","  message = re.sub(r'\\b(juas+|lol)\\b', LAUGH, message, flags=re.IGNORECASE)\n","  return message"],"execution_count":14,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cXvWSUzkguyP","executionInfo":{"status":"ok","timestamp":1620345893895,"user_tz":300,"elapsed":2328,"user":{"displayName":"Emmanuel Mosquera Casas","photoUrl":"","userId":"16600618469783398935"}},"outputId":"95951d05-b0a5-46df-c1e7-3e15d385b93d"},"source":["print (normalize_laughs(\"esto muyy feliz jajajajaja o no tan feliz jejejejeje o mejor me rio a como papa noel JOJOJO o como en mileniams LOL  kakaka\"))"],"execution_count":15,"outputs":[{"output_type":"stream","text":["esto muyy feliz twlaugh o no tan feliz twlaugh o mejor me rio a como papa noel twlaugh o como en mileniams twlaugh  twlaugh\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"TuTCNDduhBm-"},"source":["Función/método para eliminar o normalizar menciones, hashtags y URL de un mensaje (tweet)"]},{"cell_type":"code","metadata":{"id":"7NgSZCV4hCZW","executionInfo":{"status":"ok","timestamp":1620345893897,"user_tz":300,"elapsed":2326,"user":{"displayName":"Emmanuel Mosquera Casas","photoUrl":"","userId":"16600618469783398935"}}},"source":["def process_twitter_features(message, twitter_features):\n","\n","  message = re.sub(r'[\\.\\,]http','. http', message, flags=re.IGNORECASE)\n","  message = re.sub(r'[\\.\\,]#', '. #', message)\n","  message = re.sub(r'[\\.\\,]@', '. @', message)\n","\n","  if twitter_features == REMOVE:\n","    # eliminar menciones, hashtags y URL\n","    message = re.sub(r'((?<=\\s)|(?<=\\A))(@|#)\\S+', '', message)\n","    message = re.sub(r'\\b(https?:\\S+)\\b', '', message, flags=re.IGNORECASE)\n","  elif twitter_features == NORMALIZE:\n","    # cuando sea necesario se normalizaran las menciones, hashtags y URL\n","    message = re.sub(r'((?<=\\s)|(?<=\\A))@\\S+', MENTION, message)\n","    message = re.sub(r'((?<=\\s)|(?<=\\A))#\\S+', HASHTAG, message)\n","    message = re.sub(r'\\b(https?:\\S+)\\b', URL, message, flags=re.IGNORECASE)\n","\n","  return message"],"execution_count":16,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yBHuy2mLhLUw","executionInfo":{"status":"ok","timestamp":1620345893898,"user_tz":300,"elapsed":2322,"user":{"displayName":"Emmanuel Mosquera Casas","photoUrl":"","userId":"16600618469783398935"}},"outputId":"502e3461-5ede-44c6-935a-2a97226f58f6"},"source":["print(process_twitter_features(\"Rosell, una noche. Adivina quien!! http://t.co/PPAwijRX, jajajAja dime si NO ES DÍVERTIDÓÓ\",\"normalize\"))"],"execution_count":17,"outputs":[{"output_type":"stream","text":["Rosell, una noche. Adivina quien!! twurl, jajajAja dime si NO ES DÍVERTIDÓÓ\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"9WtawJqshgXf"},"source":["Función/método general para el preprocesamiento (Completo)(Funcional)"]},{"cell_type":"code","metadata":{"id":"WlQC3EbUhj1f","executionInfo":{"status":"ok","timestamp":1620345893900,"user_tz":300,"elapsed":2321,"user":{"displayName":"Emmanuel Mosquera Casas","photoUrl":"","userId":"16600618469783398935"}}},"source":["def preprocess(message):\n","  # convertir a minusculas\n","  message = message.lower()\n","        \n","  # eliminar números, retorno de linea y el tan odios retweet (de los viejos estilos de twitter)\n","  message = re.sub(r'(\\d+|\\n|\\brt\\b)', '', message)\n","        \n","  # elimar vocales con signos diacríticos (posible ambigüedad)\n","  for s,t in DIACRITICAL_VOWELS:\n","    message = re.sub(r'{0}'.format(s), t, message)\n","        \n","  # eliminar caracteres repetidos \n","  message = re.sub(r'(.)\\1{2,}', r'\\1\\1', message)\n","       \n","  # normalizar las risas\n","  message = normalize_laughs(message)\n","        \n","  # traducir la jerga y terminos coloquiales sobre todo en el español\n","  for s,t in SLANG:\n","    message = re.sub(r'\\b{0}\\b'.format(s), t, message)\n","\n","  #normalizar/eliminar hashtags, menciones y URL\n","  message = process_twitter_features(message, _twitter_features)\n","\n","  #Convertir las palabras a su raiz ( Bonita, bonito) -> bonit \n","  if _stemming:\n","    message = ' '.join(_stemmer.stem(w) for w in _tokenizer(message))\n","\n","  return message"],"execution_count":18,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"pfaXB9Z3hoWS","executionInfo":{"status":"ok","timestamp":1620345893901,"user_tz":300,"elapsed":2316,"user":{"displayName":"Emmanuel Mosquera Casas","photoUrl":"","userId":"16600618469783398935"}},"outputId":"fe2678bb-8b21-494e-f309-fb410b13579e"},"source":["print(preprocess(\"LOL!! muy graciosa esta paguina https://actualidadpanamericana.com :-) jajajaja muy buena\"))"],"execution_count":19,"outputs":[{"output_type":"stream","text":["twlaugh!! muy graciosa esta paguina twurl :-) twlaugh muy buena\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"76DdqUnViJwh"},"source":["##Descargamos la librerias NLTK"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BLQHAvz5iLNO","executionInfo":{"status":"ok","timestamp":1620345893904,"user_tz":300,"elapsed":2314,"user":{"displayName":"Emmanuel Mosquera Casas","photoUrl":"","userId":"16600618469783398935"}},"outputId":"b41d3ecc-46d8-41e4-f781-17ed5231af2b"},"source":["#Descargamos la libreria de stopwords\n","import nltk\n","nltk.download('stopwords')"],"execution_count":20,"outputs":[{"output_type":"stream","text":["[nltk_data] Downloading package stopwords to /root/nltk_data...\n","[nltk_data]   Unzipping corpora/stopwords.zip.\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["True"]},"metadata":{"tags":[]},"execution_count":20}]},{"cell_type":"markdown","metadata":{"id":"0OJ9hds6ivdn"},"source":["##Aplicamos preprocesamiento al CSV y creamos un nuevo CSV limpio"]},{"cell_type":"code","metadata":{"id":"1RlSMf_wiwjn","executionInfo":{"status":"ok","timestamp":1620345904778,"user_tz":300,"elapsed":13186,"user":{"displayName":"Emmanuel Mosquera Casas","photoUrl":"","userId":"16600618469783398935"}}},"source":["\n","\n","import numpy as np\n","import pandas as pd\n","\n","df = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/IA/Analisis_sentimientos_Twitter/datasets/dataset_2017_full.csv', encoding='utf-8')\n","#asignamos nombres a las columnas del csv para facilitar la busqueda de información\n","df.columns = ['tweetid', 'tweet','sentiment']\n","#aplicamos el preprocesamiento a los tweets con steaming =false\n","df['tweet'] = df['tweet'].apply(preprocess)\n","#eliminamos la columna tweetid que no nos sirve para entrenar y si nos genera mas uso de memoria \n","df = df.drop(columns=\"tweetid\")\n","#Es mejor trabajar con valores enteros que con letras\n","#por lo tanto reemplazaremos los sentimientos que estan como NONE->-1 | NEU -> 0 | P->1 | N->2\n","df.loc[df['sentiment'] == 'NONE', 'sentiment'] = '-1'\n","df.loc[df['sentiment'] == 'NEU', 'sentiment'] = '0'\n","df.loc[df['sentiment'] == 'P', 'sentiment'] = '1'\n","df.loc[df['sentiment'] == 'N', 'sentiment'] = '2'\n","df[\"sentiment\"].unique()\n","#guardamos el dataset en un nuvevo CSV para facilitar su posterior uso\n","df.to_csv('/content/dataset_2017_full_clean.csv', index=False, encoding='utf-8')\n","\n"],"execution_count":21,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"kcXRvNAHkMQq"},"source":["#P2.Entrenando el modelo de aprendizaje"]},{"cell_type":"markdown","metadata":{"id":"T3TjFn-rkQv6"},"source":["\n","Funciones de tokenizar/extraer tweets"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-fSFLcWfkSv3","executionInfo":{"status":"ok","timestamp":1620345911124,"user_tz":300,"elapsed":932,"user":{"displayName":"Emmanuel Mosquera Casas","photoUrl":"","userId":"16600618469783398935"}},"outputId":"29410e48-4a9c-4399-b8e5-4d4385e4e4fc"},"source":["#p2.1: funcion tokenizar con esteroides --tokeniza y limpia--\n","print(\"p2.1: funcion tokenizar con esteroides --tokeniza y limpia--\")\n","def tokenizer(text):\n","    text = re.sub('<[^>]*>', '', text)\n","    emoticons = re.findall('(?::|;|=)(?:-)?(?:\\)|\\(|D|P)', text.lower())\n","    text = re.sub('[\\W]+', ' ', text.lower()) +' '.join(emoticons).replace('-', '')\n","    tokenized = [w for w in text.split() if w not in stop]\n","    return tokenized\n","#p2.2: funcion para extraer un documento del dataset  \n","print(\"p2.2: funcion para extraer un documento del dataset  \")\n","def stream_docs(path):\n","    with open(path, 'r', encoding='utf-8') as csv:\n","        next(csv)  # skip header\n","        for line in csv:\n","            text, label = line[:-3],  int(line[-2])\n","            yield text, label\n","#p2.3: funcion que tomara una secuencia de documentos y devolvera un número particular de documentos\n","def get_minibatch(doc_stream, size):\n","    docs, y = [], []\n","    try:\n","        for _ in range(size):\n","            text, label = next(doc_stream)\n","            docs.append(text)\n","            y.append(label)\n","    except StopIteration:\n","        return None, None\n","    return docs, y"],"execution_count":22,"outputs":[{"output_type":"stream","text":["p2.1: funcion tokenizar con esteroides --tokeniza y limpia--\n","p2.2: funcion para extraer un documento del dataset  \n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fGtJpKlnkqpe","executionInfo":{"status":"ok","timestamp":1620319586760,"user_tz":300,"elapsed":576,"user":{"displayName":"Emmanuel Mosquera Casas","photoUrl":"","userId":"16600618469783398935"}},"outputId":"81dae15f-14fe-454e-e465-0d5a6962355d"},"source":["next(stream_docs(path='/content/dataset_2017_full_clean.csv'))"],"execution_count":39,"outputs":[{"output_type":"execute_result","data":{"text/plain":["('twmention ya era hora de volver al csgo y dejares el padel bienvenida ', 1)"]},"metadata":{"tags":[]},"execution_count":39}]},{"cell_type":"markdown","metadata":{"id":"2YJmIrr7k0C-"},"source":["\n","##Entrenamos el modelo usando regresión logistica\n","\n","\n"]},{"cell_type":"markdown","metadata":{"id":"7OG-Nlr9k12H"},"source":["usaremos regresión logistica xq es menos costoso en tiempo de procesamiento que support vector machine"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AxQsCHIqk3iO","executionInfo":{"status":"ok","timestamp":1620346192208,"user_tz":300,"elapsed":9779,"user":{"displayName":"Emmanuel Mosquera Casas","photoUrl":"","userId":"16600618469783398935"}},"outputId":"54afe96b-cd4e-496e-d239-25798faf3037"},"source":["path='/content/dataset_2017_full_clean.csv'\n","#p2: definimos una versión liviana de CountVectorizer+TfidfVectorizer llamada HashingVectorizer\n","from sklearn.feature_extraction.text import HashingVectorizer\n","from sklearn.linear_model import SGDClassifier\n","\n","vect = HashingVectorizer(decode_error='ignore', \n","                         n_features=2**21,\n","                         preprocessor=None, \n","                         tokenizer=tokenizer)\n","\n","#definimos como algoritmo la regressión logistica en el decenso gradiante \n","\n","clf = SGDClassifier(loss='log', random_state=1, max_iter=1)\n","doc_stream = stream_docs(path)\n","#p3. entrenamos \n","import re\n","import numpy as np\n","#import pyprind\n","from nltk.corpus import stopwords\n","stop = stopwords.words('spanish')\n","#pbar = pyprind.ProgBar(50)\n","#definimos las clases con las cuales vamos a entrenar\n","classes = np.array([-1,0, 1,2])\n","#hacemos 50 repeticiones\n","for _ in range(50):\n","  #tomaremos grupos de 500 tweets para entrenar\n","    X_train, y_train = get_minibatch(doc_stream, size=1000)\n","    if not X_train:\n","        break\n","    X_train = vect.transform(X_train)\n","    clf.partial_fit(X_train, y_train, classes=classes)\n","    #pbar.update()\n","#probamos la eficiencia del modelo con 5000 tweets .\n","X_test, y_test = get_minibatch(doc_stream, size=5000)\n","X_test = vect.transform(X_test)\n","print('Presición del modelo: %.3f' % clf.score(X_test, y_test))\n","#recalibramos el modelo.\n","clf = clf.partial_fit(X_test, y_test)"],"execution_count":31,"outputs":[{"output_type":"stream","text":["Presición del modelo: 0.806\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"-iRLUiXElTvv"},"source":["#P3.Serializamos (congelamos) el modelo para usarlo fuera de google colaboratory"]},{"cell_type":"code","metadata":{"id":"rOGSVocslWYI","executionInfo":{"status":"ok","timestamp":1620345933458,"user_tz":300,"elapsed":727,"user":{"displayName":"Emmanuel Mosquera Casas","photoUrl":"","userId":"16600618469783398935"}}},"source":["import pickle\n","import os\n","#creo una carpeta en mi google drive para guardar los archivos serializados\n","dest = os.path.join('/content/twitterclassifier', 'pkl_objects')\n","if not os.path.exists(dest):\n","    os.makedirs(dest)\n","#convertimos el clasificador y el stopword en archivo/objectos pkl\n","pickle.dump(stop, open(os.path.join(dest, 'stopwords.pkl'), 'wb'), protocol=4)   \n","pickle.dump(clf, open(os.path.join(dest, 'classifier.pkl'), 'wb'), protocol=4)\n","#Es importante recordar que deben verificar que los dos archivos esten en su drive"],"execution_count":24,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"aTYyxQfUnNYX"},"source":["\n","##Probemos a ver si funciona"]},{"cell_type":"code","metadata":{"id":"zarxu4ownNxm","executionInfo":{"status":"ok","timestamp":1620346146623,"user_tz":300,"elapsed":1030,"user":{"displayName":"Emmanuel Mosquera Casas","photoUrl":"","userId":"16600618469783398935"}}},"source":["import os\n","os.chdir('/content/twitterclassifier')"],"execution_count":30,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"Mku-8LTenXdB"},"source":["\n","##Deserializamos los estimadores\n"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":393},"id":"Jg3FHYu2nX6O","executionInfo":{"status":"error","timestamp":1620346198911,"user_tz":300,"elapsed":761,"user":{"displayName":"Emmanuel Mosquera Casas","photoUrl":"","userId":"16600618469783398935"}},"outputId":"1e772183-9929-4d45-dc6e-f8b5151c294f"},"source":["import pickle\n","import re\n","import os\n","from vectorizer import vect  # archivo vectorizer.py \n","clf = pickle.load(open(os.path.join('/content/drive/MyDrive/Colab Notebooks/IA/DataTwitter/twitterclassifier/pkl_objects', 'classifier.pkl'), 'rb'))"],"execution_count":32,"outputs":[{"output_type":"error","ename":"ModuleNotFoundError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mModuleNotFoundError\u001b[0m                       Traceback (most recent call last)","\u001b[0;32m<ipython-input-32-1a0b5e71b287>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mre\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mos\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 4\u001b[0;31m \u001b[0;32mfrom\u001b[0m \u001b[0mvectorizer\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mvect\u001b[0m  \u001b[0;31m# archivo vectorizer.py\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      5\u001b[0m \u001b[0mclf\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mpickle\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mload\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mopen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mos\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpath\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mjoin\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'/content/drive/MyDrive/Colab Notebooks/IA/DataTwitter/twitterclassifier/pkl_objects'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'classifier.pkl'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;34m'rb'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mModuleNotFoundError\u001b[0m: No module named 'vectorizer'","","\u001b[0;31m---------------------------------------------------------------------------\u001b[0;32m\nNOTE: If your import is failing due to a missing package, you can\nmanually install dependencies using either !pip or !apt.\n\nTo view examples of installing some common dependencies, click the\n\"Open Examples\" button below.\n\u001b[0;31m---------------------------------------------------------------------------\u001b[0m\n"]}]},{"cell_type":"markdown","metadata":{"id":"_5WVKKPGpbNf"},"source":["\n","##Clasifiquemos un texto"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"k-42iO7EpiQ2","executionInfo":{"status":"ok","timestamp":1620346240107,"user_tz":300,"elapsed":776,"user":{"displayName":"Emmanuel Mosquera Casas","photoUrl":"","userId":"16600618469783398935"}},"outputId":"8bf81b2a-178f-4efa-88e8-faeaacabf364"},"source":["import numpy as np\n","#NONE->-1 | NEU -> 0 | P->1 | N->2\n","label = {-1:'Sin sentimiento', 0:'Neutro', 1:'Positivo',2: 'Negativo'}\n","\n","#example = ['Te odio más que a la muerte']\n","example1 = 'que pelicula me gusto solo una parte'\n","example = [example1]\n","#convertimos el texto en un vector de palabras y extraemos sus caracteristicas https://scikit-learn.org/stable/modules/feature_extraction.html\n","textConvert = vect.transform(example)  \n","print('*Predicción: %s\\n*Probabilidad: %.2f%%'%(label[clf.predict(textConvert)[0]], np.max(clf.predict_proba(textConvert))*100))\n","print('*Predicción: %s'%label[clf.predict(textConvert)[0]])\n","print(np.max(clf.predict_proba(textConvert))*100)"],"execution_count":33,"outputs":[{"output_type":"stream","text":["*Predicción: Positivo\n","*Probabilidad: 60.91%\n","*Predicción: Positivo\n","60.90827635815772\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"175gPkMFqVCn"},"source":["#RECORREMOS LOS TWEETS DESCARGADOS Y LOS CLASIFICAMOS"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6cSGyRGttQ9w","executionInfo":{"status":"ok","timestamp":1620345781990,"user_tz":300,"elapsed":4788,"user":{"displayName":"Emmanuel Mosquera Casas","photoUrl":"","userId":"16600618469783398935"}},"outputId":"8bcfc02d-3828-4148-df53-5c506ef4e2b3"},"source":["pip install pyprind"],"execution_count":7,"outputs":[{"output_type":"stream","text":["Collecting pyprind\n","  Downloading https://files.pythonhosted.org/packages/ab/b3/1f12ebc5009c65b607509393ad98240728b4401bc3593868fb161fdd3760/PyPrind-2.11.3-py2.py3-none-any.whl\n","Installing collected packages: pyprind\n","Successfully installed pyprind-2.11.3\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":862},"id":"3edA3qQDqXXX","executionInfo":{"status":"ok","timestamp":1620346378603,"user_tz":300,"elapsed":131676,"user":{"displayName":"Emmanuel Mosquera Casas","photoUrl":"","userId":"16600618469783398935"}},"outputId":"cd52a1e2-aa23-4c85-bc07-555427118929"},"source":["import numpy as np\n","import pandas as pd\n","import pyprind\n","\n","\n","pbar = pyprind.ProgBar(50000)\n","\n","df = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/IA/DataTwitter/Anonymous.csv', encoding='utf-8')\n","#creamos una columna llamada Sentimient donde guardaremos la predicción\n","df['sentiment'] =''\n","#creamos una columna llamada Probability donde guardaremos la acertabilidad que dio el clasificador\n","df['probability']=0\n","#conversión de sentimientos (numeros a palabras)= NONE->-1 | NEU -> 0 | P->1 | N->2\n","label = {-1:'Sin sentimiento', 0:'Neutro', 1:'Positivo',2: 'Negativo'}\n","for rowid in range(len(df.index)):\n","  text=df['text'][rowid]\n","  textConvert = vect.transform([text]) \n","  df['sentiment'][rowid]=label[clf.predict(textConvert)[0]]\n","  df['probability'][rowid]=np.max(clf.predict_proba(textConvert))*100\n","  pbar.update()\n","df.head(20)"],"execution_count":34,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:18: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:19: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","0% [#                             ] 100% | ETA: 00:33:36"],"name":"stderr"},{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>user</th>\n","      <th>location</th>\n","      <th>text</th>\n","      <th>sentiment</th>\n","      <th>probability</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>KarenBerrior</td>\n","      <td>Valledupar, Colombia</td>\n","      <td>La tumbaron 🥳🥳🥳\\n#anonymous https://t.co/ThAkl...</td>\n","      <td>Positivo</td>\n","      <td>65</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>PaulRincon10</td>\n","      <td>Barranquilla, Colombia</td>\n","      <td>. #Anonymous se bajó estás tres página web en ...</td>\n","      <td>Positivo</td>\n","      <td>66</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>JhonEdward92</td>\n","      <td>Colombia</td>\n","      <td>#SOSColombiaDDHH #ParoNacional4M #SOSColombiaN...</td>\n","      <td>Positivo</td>\n","      <td>64</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Laura_MT16</td>\n","      <td>Magic Shop ✨</td>\n","      <td>Tumbaron la pagina de la presidencia? \\n#Anony...</td>\n","      <td>Positivo</td>\n","      <td>68</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>zaid527</td>\n","      <td>colombia</td>\n","      <td>Vamos de nuevo así la página de presidencia se...</td>\n","      <td>Positivo</td>\n","      <td>67</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Lucas15626612</td>\n","      <td>NaN</td>\n","      <td>Comiencen a hackear todo y que las injusticias...</td>\n","      <td>Positivo</td>\n","      <td>51</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>mauren_paez</td>\n","      <td>NaN</td>\n","      <td>#SOSColombiaDDHH \\nPETICIÓN NACIONAL PARA QUE ...</td>\n","      <td>Positivo</td>\n","      <td>67</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>MIGUELP77895620</td>\n","      <td>NaN</td>\n","      <td>Yo soy #Anonymous</td>\n","      <td>Positivo</td>\n","      <td>58</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>ElAgente87</td>\n","      <td>Peru</td>\n","      <td>#Anonymous ha hackeado la página oficial del g...</td>\n","      <td>Positivo</td>\n","      <td>91</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>ocean94girl</td>\n","      <td>NaN</td>\n","      <td>@SARGENTOCHALA Zapateiro,dijo que en 24 horas ...</td>\n","      <td>Positivo</td>\n","      <td>62</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>gisela_verona</td>\n","      <td>Valle del Cauca, Colombia</td>\n","      <td>Los ojos del mundo entero en estos momentos es...</td>\n","      <td>Positivo</td>\n","      <td>89</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>melindrx</td>\n","      <td>Pueblo lavanda</td>\n","      <td>#Anonymous acaben con icetex, todo bien 🥺👍🏼</td>\n","      <td>Positivo</td>\n","      <td>76</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>ALEX90427324</td>\n","      <td>NaN</td>\n","      <td>¡MENSAJE DE ANONYMOUS A COLOMBIA Y ADVIERTE AL...</td>\n","      <td>Negativo</td>\n","      <td>71</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>Pataco_pisao</td>\n","      <td>Aracataca, Colombia</td>\n","      <td>Los héroes si existen , están detrás de #Anony...</td>\n","      <td>Positivo</td>\n","      <td>53</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>AnonNewsPT</td>\n","      <td>NaN</td>\n","      <td>Cae página de Presidencia Duque-Uribe, caen lo...</td>\n","      <td>Positivo</td>\n","      <td>58</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>ocean94girl</td>\n","      <td>NaN</td>\n","      <td>@Gu2Hail Zapateiro,dijo que en 24 horas restab...</td>\n","      <td>Positivo</td>\n","      <td>62</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>mecca_tv</td>\n","      <td>Colombia</td>\n","      <td>MARCHA DE MOTOCICLISTAS EN BOGOTA, en contra d...</td>\n","      <td>Positivo</td>\n","      <td>61</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>Jeffers01218884</td>\n","      <td>NaN</td>\n","      <td>@Real_jagoDibuja Vaya coincidencia que después...</td>\n","      <td>Positivo</td>\n","      <td>53</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>YourAnonNewsCL1</td>\n","      <td>NaN</td>\n","      <td>#OpColombia ¡ Aquí el trabajo está hecho, es #...</td>\n","      <td>Positivo</td>\n","      <td>69</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>YeidyMendez4</td>\n","      <td>NaN</td>\n","      <td>Déjenlos descubiertos, expongan todo, exhiban ...</td>\n","      <td>Negativo</td>\n","      <td>59</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["               user                   location  ... sentiment probability\n","0      KarenBerrior       Valledupar, Colombia  ...  Positivo          65\n","1      PaulRincon10     Barranquilla, Colombia  ...  Positivo          66\n","2      JhonEdward92                   Colombia  ...  Positivo          64\n","3        Laura_MT16               Magic Shop ✨  ...  Positivo          68\n","4           zaid527                   colombia  ...  Positivo          67\n","5     Lucas15626612                        NaN  ...  Positivo          51\n","6       mauren_paez                        NaN  ...  Positivo          67\n","7   MIGUELP77895620                        NaN  ...  Positivo          58\n","8        ElAgente87                       Peru  ...  Positivo          91\n","9       ocean94girl                        NaN  ...  Positivo          62\n","10    gisela_verona  Valle del Cauca, Colombia  ...  Positivo          89\n","11         melindrx             Pueblo lavanda  ...  Positivo          76\n","12     ALEX90427324                        NaN  ...  Negativo          71\n","13     Pataco_pisao        Aracataca, Colombia  ...  Positivo          53\n","14       AnonNewsPT                        NaN  ...  Positivo          58\n","15      ocean94girl                        NaN  ...  Positivo          62\n","16         mecca_tv                   Colombia  ...  Positivo          61\n","17  Jeffers01218884                        NaN  ...  Positivo          53\n","18  YourAnonNewsCL1                        NaN  ...  Positivo          69\n","19     YeidyMendez4                        NaN  ...  Negativo          59\n","\n","[20 rows x 5 columns]"]},"metadata":{"tags":[]},"execution_count":34}]},{"cell_type":"code","metadata":{"id":"Kw-uDAkeuENn","executionInfo":{"status":"ok","timestamp":1620322124397,"user_tz":300,"elapsed":435,"user":{"displayName":"Emmanuel Mosquera Casas","photoUrl":"","userId":"16600618469783398935"}}},"source":["df.to_csv('/content/Anonymous_data_sentiment.csv', index=False, encoding='utf-8')"],"execution_count":57,"outputs":[]},{"cell_type":"code","metadata":{"id":"4PHzVwO6u3s_","executionInfo":{"status":"ok","timestamp":1620346563568,"user_tz":300,"elapsed":132726,"user":{"displayName":"Emmanuel Mosquera Casas","photoUrl":"","userId":"16600618469783398935"}}},"source":["\n","\n","#segunda forma de ejecutar el analisis (metodos)\n","def f_prediction(row):\n","  text=row['text']\n","  textConvert = vect.transform([text]) \n","  return label[clf.predict(textConvert)[0]]\n","\n","def f_probability(row):\n","  text=row['text']\n","  textConvert = vect.transform([text]) \n","  return np.max(clf.predict_proba(textConvert))*100\n","\n","df[\"sentiment\"] = df.apply(f_prediction, axis=1) # recorriendo columnas\n","df[\"probability\"] = df.apply(f_probability, axis=1) # recorriendo columnas\n","\n"],"execution_count":35,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":387},"id":"eQZJWlfnvnY3","executionInfo":{"status":"ok","timestamp":1620346573084,"user_tz":300,"elapsed":931,"user":{"displayName":"Emmanuel Mosquera Casas","photoUrl":"","userId":"16600618469783398935"}},"outputId":"36df9025-069c-461d-9795-328c7014d1c9"},"source":["import matplotlib.pyplot as plt\n","#sentimientos = df[\"sentiment\"].unique()\n","df.groupby('sentiment')['location'].nunique().plot(kind='bar')\n","print(df.groupby(['sentiment']).size())\n","#df.groupby(['sentiment']).size().unstack().plot(kind='bar',stacked=True)\n","plt.show()\n","\n","#df.head(20)\n","#df[\"sentiment\"].unique()"],"execution_count":36,"outputs":[{"output_type":"stream","text":["sentiment\n","Negativo     204\n","Positivo    2923\n","dtype: int64\n"],"name":"stdout"},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4NqFeXPmIal4","executionInfo":{"status":"ok","timestamp":1620346604916,"user_tz":300,"elapsed":746,"user":{"displayName":"Emmanuel Mosquera Casas","photoUrl":"","userId":"16600618469783398935"}},"outputId":"07d128c3-a505-4098-ae25-c308f2264f73"},"source":["df.info()"],"execution_count":38,"outputs":[{"output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 3127 entries, 0 to 3126\n","Data columns (total 5 columns):\n"," #   Column       Non-Null Count  Dtype  \n","---  ------       --------------  -----  \n"," 0   user         3127 non-null   object \n"," 1   location     1639 non-null   object \n"," 2   text         3127 non-null   object \n"," 3   sentiment    3127 non-null   object \n"," 4   probability  3127 non-null   float64\n","dtypes: float64(1), object(4)\n","memory usage: 122.3+ KB\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"XUV0WBahvzVW"},"source":["#p4. generar DB de sqlite"]},{"cell_type":"code","metadata":{"id":"dY8N2SfUv0Qn","executionInfo":{"status":"ok","timestamp":1620343275875,"user_tz":300,"elapsed":846,"user":{"displayName":"Emmanuel Mosquera Casas","photoUrl":"","userId":"16600618469783398935"}}},"source":["import sqlite3\n","import os\n","\n","if os.path.exists('tweets.sqlite'):\n","    os.remove('tweets.sqlite')\n","\n","conn = sqlite3.connect('tweets.sqlite')\n","c = conn.cursor()\n","c.execute('CREATE TABLE tweets_db (tweet TEXT, sentiment INTEGER, date TEXT)')\n","\n","example1 = 'que aburrido es estar en cuarentena…'\n","c.execute(\"INSERT INTO tweets_db (tweet, sentiment, date) VALUES (?, ?, DATETIME('now'))\", (example1, 2))\n","\n","example2 = 'Estoy feliz de estar con mi familia'\n","c.execute(\"INSERT INTO tweets_db (tweet, sentiment, date) VALUES (?, ?, DATETIME('now'))\", (example2, 1))\n","\n","conn.commit()\n","conn.close()\n","\n"],"execution_count":1,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"R_2x6mHnv584"},"source":["##P4.1 consultar db"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FymBlj8cv6-W","executionInfo":{"status":"ok","timestamp":1620343276269,"user_tz":300,"elapsed":1208,"user":{"displayName":"Emmanuel Mosquera Casas","photoUrl":"","userId":"16600618469783398935"}},"outputId":"78b37eaf-d363-421c-f409-02cc49f86231"},"source":["conn = sqlite3.connect('tweets.sqlite')\n","c = conn.cursor()\n","\n","c.execute(\"SELECT * FROM tweets_db WHERE date BETWEEN '2019-01-01 10:10:10' AND DATETIME('now')\")\n","results = c.fetchall()\n","conn.close()\n","\n","print(results)"],"execution_count":2,"outputs":[{"output_type":"stream","text":["[('que aburrido es estar en cuarentena…', 2, '2021-05-06 23:21:15'), ('Estoy feliz de estar con mi familia', 1, '2021-05-06 23:21:15')]\n"],"name":"stdout"}]}]}