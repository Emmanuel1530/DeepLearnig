{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Regresion Lineal Clase06092021","provenance":[],"authorship_tag":"ABX9TyMCpzSL+tWP1ykSO5+q2mXv"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","metadata":{"colab":{"resources":{"http://localhost:8080/nbextensions/google.colab/files.js":{"data":"Ly8gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIExMQwovLwovLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsKLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgovLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKLy8KLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKLy8KLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQovLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLAovLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4KLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZAovLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4KCi8qKgogKiBAZmlsZW92ZXJ2aWV3IEhlbHBlcnMgZm9yIGdvb2dsZS5jb2xhYiBQeXRob24gbW9kdWxlLgogKi8KKGZ1bmN0aW9uKHNjb3BlKSB7CmZ1bmN0aW9uIHNwYW4odGV4dCwgc3R5bGVBdHRyaWJ1dGVzID0ge30pIHsKICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpOwogIGVsZW1lbnQudGV4dENvbnRlbnQgPSB0ZXh0OwogIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKHN0eWxlQXR0cmlidXRlcykpIHsKICAgIGVsZW1lbnQuc3R5bGVba2V5XSA9IHN0eWxlQXR0cmlidXRlc1trZXldOwogIH0KICByZXR1cm4gZWxlbWVudDsKfQoKLy8gTWF4IG51bWJlciBvZiBieXRlcyB3aGljaCB3aWxsIGJlIHVwbG9hZGVkIGF0IGEgdGltZS4KY29uc3QgTUFYX1BBWUxPQURfU0laRSA9IDEwMCAqIDEwMjQ7CgpmdW5jdGlvbiBfdXBsb2FkRmlsZXMoaW5wdXRJZCwgb3V0cHV0SWQpIHsKICBjb25zdCBzdGVwcyA9IHVwbG9hZEZpbGVzU3RlcChpbnB1dElkLCBvdXRwdXRJZCk7CiAgY29uc3Qgb3V0cHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG91dHB1dElkKTsKICAvLyBDYWNoZSBzdGVwcyBvbiB0aGUgb3V0cHV0RWxlbWVudCB0byBtYWtlIGl0IGF2YWlsYWJsZSBmb3IgdGhlIG5leHQgY2FsbAogIC8vIHRvIHVwbG9hZEZpbGVzQ29udGludWUgZnJvbSBQeXRob24uCiAgb3V0cHV0RWxlbWVudC5zdGVwcyA9IHN0ZXBzOwoKICByZXR1cm4gX3VwbG9hZEZpbGVzQ29udGludWUob3V0cHV0SWQpOwp9CgovLyBUaGlzIGlzIHJvdWdobHkgYW4gYXN5bmMgZ2VuZXJhdG9yIChub3Qgc3VwcG9ydGVkIGluIHRoZSBicm93c2VyIHlldCksCi8vIHdoZXJlIHRoZXJlIGFyZSBtdWx0aXBsZSBhc3luY2hyb25vdXMgc3RlcHMgYW5kIHRoZSBQeXRob24gc2lkZSBpcyBnb2luZwovLyB0byBwb2xsIGZvciBjb21wbGV0aW9uIG9mIGVhY2ggc3RlcC4KLy8gVGhpcyB1c2VzIGEgUHJvbWlzZSB0byBibG9jayB0aGUgcHl0aG9uIHNpZGUgb24gY29tcGxldGlvbiBvZiBlYWNoIHN0ZXAsCi8vIHRoZW4gcGFzc2VzIHRoZSByZXN1bHQgb2YgdGhlIHByZXZpb3VzIHN0ZXAgYXMgdGhlIGlucHV0IHRvIHRoZSBuZXh0IHN0ZXAuCmZ1bmN0aW9uIF91cGxvYWRGaWxlc0NvbnRpbnVlKG91dHB1dElkKSB7CiAgY29uc3Qgb3V0cHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG91dHB1dElkKTsKICBjb25zdCBzdGVwcyA9IG91dHB1dEVsZW1lbnQuc3RlcHM7CgogIGNvbnN0IG5leHQgPSBzdGVwcy5uZXh0KG91dHB1dEVsZW1lbnQubGFzdFByb21pc2VWYWx1ZSk7CiAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShuZXh0LnZhbHVlLnByb21pc2UpLnRoZW4oKHZhbHVlKSA9PiB7CiAgICAvLyBDYWNoZSB0aGUgbGFzdCBwcm9taXNlIHZhbHVlIHRvIG1ha2UgaXQgYXZhaWxhYmxlIHRvIHRoZSBuZXh0CiAgICAvLyBzdGVwIG9mIHRoZSBnZW5lcmF0b3IuCiAgICBvdXRwdXRFbGVtZW50Lmxhc3RQcm9taXNlVmFsdWUgPSB2YWx1ZTsKICAgIHJldHVybiBuZXh0LnZhbHVlLnJlc3BvbnNlOwogIH0pOwp9CgovKioKICogR2VuZXJhdG9yIGZ1bmN0aW9uIHdoaWNoIGlzIGNhbGxlZCBiZXR3ZWVuIGVhY2ggYXN5bmMgc3RlcCBvZiB0aGUgdXBsb2FkCiAqIHByb2Nlc3MuCiAqIEBwYXJhbSB7c3RyaW5nfSBpbnB1dElkIEVsZW1lbnQgSUQgb2YgdGhlIGlucHV0IGZpbGUgcGlja2VyIGVsZW1lbnQuCiAqIEBwYXJhbSB7c3RyaW5nfSBvdXRwdXRJZCBFbGVtZW50IElEIG9mIHRoZSBvdXRwdXQgZGlzcGxheS4KICogQHJldHVybiB7IUl0ZXJhYmxlPCFPYmplY3Q+fSBJdGVyYWJsZSBvZiBuZXh0IHN0ZXBzLgogKi8KZnVuY3Rpb24qIHVwbG9hZEZpbGVzU3RlcChpbnB1dElkLCBvdXRwdXRJZCkgewogIGNvbnN0IGlucHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlucHV0SWQpOwogIGlucHV0RWxlbWVudC5kaXNhYmxlZCA9IGZhbHNlOwoKICBjb25zdCBvdXRwdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQob3V0cHV0SWQpOwogIG91dHB1dEVsZW1lbnQuaW5uZXJIVE1MID0gJyc7CgogIGNvbnN0IHBpY2tlZFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgaW5wdXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIChlKSA9PiB7CiAgICAgIHJlc29sdmUoZS50YXJnZXQuZmlsZXMpOwogICAgfSk7CiAgfSk7CgogIGNvbnN0IGNhbmNlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpOwogIGlucHV0RWxlbWVudC5wYXJlbnRFbGVtZW50LmFwcGVuZENoaWxkKGNhbmNlbCk7CiAgY2FuY2VsLnRleHRDb250ZW50ID0gJ0NhbmNlbCB1cGxvYWQnOwogIGNvbnN0IGNhbmNlbFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgY2FuY2VsLm9uY2xpY2sgPSAoKSA9PiB7CiAgICAgIHJlc29sdmUobnVsbCk7CiAgICB9OwogIH0pOwoKICAvLyBXYWl0IGZvciB0aGUgdXNlciB0byBwaWNrIHRoZSBmaWxlcy4KICBjb25zdCBmaWxlcyA9IHlpZWxkIHsKICAgIHByb21pc2U6IFByb21pc2UucmFjZShbcGlja2VkUHJvbWlzZSwgY2FuY2VsUHJvbWlzZV0pLAogICAgcmVzcG9uc2U6IHsKICAgICAgYWN0aW9uOiAnc3RhcnRpbmcnLAogICAgfQogIH07CgogIGNhbmNlbC5yZW1vdmUoKTsKCiAgLy8gRGlzYWJsZSB0aGUgaW5wdXQgZWxlbWVudCBzaW5jZSBmdXJ0aGVyIHBpY2tzIGFyZSBub3QgYWxsb3dlZC4KICBpbnB1dEVsZW1lbnQuZGlzYWJsZWQgPSB0cnVlOwoKICBpZiAoIWZpbGVzKSB7CiAgICByZXR1cm4gewogICAgICByZXNwb25zZTogewogICAgICAgIGFjdGlvbjogJ2NvbXBsZXRlJywKICAgICAgfQogICAgfTsKICB9CgogIGZvciAoY29uc3QgZmlsZSBvZiBmaWxlcykgewogICAgY29uc3QgbGkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpOwogICAgbGkuYXBwZW5kKHNwYW4oZmlsZS5uYW1lLCB7Zm9udFdlaWdodDogJ2JvbGQnfSkpOwogICAgbGkuYXBwZW5kKHNwYW4oCiAgICAgICAgYCgke2ZpbGUudHlwZSB8fCAnbi9hJ30pIC0gJHtmaWxlLnNpemV9IGJ5dGVzLCBgICsKICAgICAgICBgbGFzdCBtb2RpZmllZDogJHsKICAgICAgICAgICAgZmlsZS5sYXN0TW9kaWZpZWREYXRlID8gZmlsZS5sYXN0TW9kaWZpZWREYXRlLnRvTG9jYWxlRGF0ZVN0cmluZygpIDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ24vYSd9IC0gYCkpOwogICAgY29uc3QgcGVyY2VudCA9IHNwYW4oJzAlIGRvbmUnKTsKICAgIGxpLmFwcGVuZENoaWxkKHBlcmNlbnQpOwoKICAgIG91dHB1dEVsZW1lbnQuYXBwZW5kQ2hpbGQobGkpOwoKICAgIGNvbnN0IGZpbGVEYXRhUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICAgIGNvbnN0IHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7CiAgICAgIHJlYWRlci5vbmxvYWQgPSAoZSkgPT4gewogICAgICAgIHJlc29sdmUoZS50YXJnZXQucmVzdWx0KTsKICAgICAgfTsKICAgICAgcmVhZGVyLnJlYWRBc0FycmF5QnVmZmVyKGZpbGUpOwogICAgfSk7CiAgICAvLyBXYWl0IGZvciB0aGUgZGF0YSB0byBiZSByZWFkeS4KICAgIGxldCBmaWxlRGF0YSA9IHlpZWxkIHsKICAgICAgcHJvbWlzZTogZmlsZURhdGFQcm9taXNlLAogICAgICByZXNwb25zZTogewogICAgICAgIGFjdGlvbjogJ2NvbnRpbnVlJywKICAgICAgfQogICAgfTsKCiAgICAvLyBVc2UgYSBjaHVua2VkIHNlbmRpbmcgdG8gYXZvaWQgbWVzc2FnZSBzaXplIGxpbWl0cy4gU2VlIGIvNjIxMTU2NjAuCiAgICBsZXQgcG9zaXRpb24gPSAwOwogICAgZG8gewogICAgICBjb25zdCBsZW5ndGggPSBNYXRoLm1pbihmaWxlRGF0YS5ieXRlTGVuZ3RoIC0gcG9zaXRpb24sIE1BWF9QQVlMT0FEX1NJWkUpOwogICAgICBjb25zdCBjaHVuayA9IG5ldyBVaW50OEFycmF5KGZpbGVEYXRhLCBwb3NpdGlvbiwgbGVuZ3RoKTsKICAgICAgcG9zaXRpb24gKz0gbGVuZ3RoOwoKICAgICAgY29uc3QgYmFzZTY0ID0gYnRvYShTdHJpbmcuZnJvbUNoYXJDb2RlLmFwcGx5KG51bGwsIGNodW5rKSk7CiAgICAgIHlpZWxkIHsKICAgICAgICByZXNwb25zZTogewogICAgICAgICAgYWN0aW9uOiAnYXBwZW5kJywKICAgICAgICAgIGZpbGU6IGZpbGUubmFtZSwKICAgICAgICAgIGRhdGE6IGJhc2U2NCwKICAgICAgICB9LAogICAgICB9OwoKICAgICAgbGV0IHBlcmNlbnREb25lID0gZmlsZURhdGEuYnl0ZUxlbmd0aCA9PT0gMCA/CiAgICAgICAgICAxMDAgOgogICAgICAgICAgTWF0aC5yb3VuZCgocG9zaXRpb24gLyBmaWxlRGF0YS5ieXRlTGVuZ3RoKSAqIDEwMCk7CiAgICAgIHBlcmNlbnQudGV4dENvbnRlbnQgPSBgJHtwZXJjZW50RG9uZX0lIGRvbmVgOwoKICAgIH0gd2hpbGUgKHBvc2l0aW9uIDwgZmlsZURhdGEuYnl0ZUxlbmd0aCk7CiAgfQoKICAvLyBBbGwgZG9uZS4KICB5aWVsZCB7CiAgICByZXNwb25zZTogewogICAgICBhY3Rpb246ICdjb21wbGV0ZScsCiAgICB9CiAgfTsKfQoKc2NvcGUuZ29vZ2xlID0gc2NvcGUuZ29vZ2xlIHx8IHt9OwpzY29wZS5nb29nbGUuY29sYWIgPSBzY29wZS5nb29nbGUuY29sYWIgfHwge307CnNjb3BlLmdvb2dsZS5jb2xhYi5fZmlsZXMgPSB7CiAgX3VwbG9hZEZpbGVzLAogIF91cGxvYWRGaWxlc0NvbnRpbnVlLAp9Owp9KShzZWxmKTsK","ok":true,"headers":[["content-type","application/javascript"]],"status":200,"status_text":"OK"}},"base_uri":"https://localhost:8080/","height":75},"id":"B5ghB_D6mA-K","executionInfo":{"status":"ok","timestamp":1630957494761,"user_tz":300,"elapsed":9409,"user":{"displayName":"Emmanuel Mosquera Casas","photoUrl":"","userId":"16600618469783398935"}},"outputId":"84ecb42f-a31a-42a1-9b71-5288900c8e12"},"source":["from google.colab import files\n","datos = files.upload()"],"execution_count":1,"outputs":[{"output_type":"display_data","data":{"text/html":["\n","     <input type=\"file\" id=\"files-19f7ad13-af58-4aa8-b985-cf1e2710113e\" name=\"files[]\" multiple disabled\n","        style=\"border:none\" />\n","     <output id=\"result-19f7ad13-af58-4aa8-b985-cf1e2710113e\">\n","      Upload widget is only available when the cell has been executed in the\n","      current browser session. Please rerun this cell to enable.\n","      </output>\n","      <script src=\"/nbextensions/google.colab/files.js\"></script> "],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Saving MarathonData.csv to MarathonData.csv\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":617},"id":"ODusGLsTpHdB","executionInfo":{"status":"ok","timestamp":1630960031693,"user_tz":300,"elapsed":244,"user":{"displayName":"Emmanuel Mosquera Casas","photoUrl":"","userId":"16600618469783398935"}},"outputId":"bc0ba3c6-4e5e-4b18-b648-cf21ff8f7469"},"source":["import pandas as pd\n","import io\n","datos_maraton = pd.read_csv(io.BytesIO(datos[\"MarathonData.csv\"]))\n","datos_maraton"],"execution_count":34,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>Marathon</th>\n","      <th>Name</th>\n","      <th>Category</th>\n","      <th>km4week</th>\n","      <th>sp4week</th>\n","      <th>CrossTraining</th>\n","      <th>Wall21</th>\n","      <th>MarathonTime</th>\n","      <th>CATEGORY</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>Prague17</td>\n","      <td>Blair MORGAN</td>\n","      <td>MAM</td>\n","      <td>132.8</td>\n","      <td>14.434783</td>\n","      <td>NaN</td>\n","      <td>1.16</td>\n","      <td>2.37</td>\n","      <td>A</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>Prague17</td>\n","      <td>Robert Heczko</td>\n","      <td>MAM</td>\n","      <td>68.6</td>\n","      <td>13.674419</td>\n","      <td>NaN</td>\n","      <td>1.23</td>\n","      <td>2.59</td>\n","      <td>A</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>Prague17</td>\n","      <td>Michon Jerome</td>\n","      <td>MAM</td>\n","      <td>82.7</td>\n","      <td>13.520436</td>\n","      <td>NaN</td>\n","      <td>1.30</td>\n","      <td>2.66</td>\n","      <td>A</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>Prague17</td>\n","      <td>Daniel Or lek</td>\n","      <td>M45</td>\n","      <td>137.5</td>\n","      <td>12.258544</td>\n","      <td>NaN</td>\n","      <td>1.32</td>\n","      <td>2.68</td>\n","      <td>A</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>Prague17</td>\n","      <td>Luk ? Mr zek</td>\n","      <td>MAM</td>\n","      <td>84.6</td>\n","      <td>13.945055</td>\n","      <td>NaN</td>\n","      <td>1.36</td>\n","      <td>2.74</td>\n","      <td>A</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>82</th>\n","      <td>83</td>\n","      <td>Prague17</td>\n","      <td>Stefano Vegliani</td>\n","      <td>M55</td>\n","      <td>50.0</td>\n","      <td>10.830325</td>\n","      <td>NaN</td>\n","      <td>2.02</td>\n","      <td>3.93</td>\n","      <td>D</td>\n","    </tr>\n","    <tr>\n","      <th>83</th>\n","      <td>84</td>\n","      <td>Prague17</td>\n","      <td>Andrej Madliak</td>\n","      <td>M40</td>\n","      <td>33.6</td>\n","      <td>10.130653</td>\n","      <td>ciclista 3h</td>\n","      <td>1.94</td>\n","      <td>3.93</td>\n","      <td>D</td>\n","    </tr>\n","    <tr>\n","      <th>84</th>\n","      <td>85</td>\n","      <td>Prague17</td>\n","      <td>Yoi Ohsako</td>\n","      <td>M40</td>\n","      <td>55.4</td>\n","      <td>11.043189</td>\n","      <td>NaN</td>\n","      <td>1.94</td>\n","      <td>3.94</td>\n","      <td>D</td>\n","    </tr>\n","    <tr>\n","      <th>85</th>\n","      <td>86</td>\n","      <td>Prague17</td>\n","      <td>Simon Dunn</td>\n","      <td>M45</td>\n","      <td>33.2</td>\n","      <td>11.066667</td>\n","      <td>NaN</td>\n","      <td>2.05</td>\n","      <td>3.95</td>\n","      <td>D</td>\n","    </tr>\n","    <tr>\n","      <th>86</th>\n","      <td>87</td>\n","      <td>Prague17</td>\n","      <td>Pavel ?imek</td>\n","      <td>M40</td>\n","      <td>17.9</td>\n","      <td>10.848485</td>\n","      <td>ciclista 5h</td>\n","      <td>2.05</td>\n","      <td>3.98</td>\n","      <td>D</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>87 rows × 10 columns</p>\n","</div>"],"text/plain":["    id  Marathon              Name  ... Wall21  MarathonTime  CATEGORY\n","0    1  Prague17      Blair MORGAN  ...   1.16          2.37         A\n","1    2  Prague17     Robert Heczko  ...   1.23          2.59         A\n","2    3  Prague17     Michon Jerome  ...   1.30          2.66         A\n","3    4  Prague17     Daniel Or lek  ...   1.32          2.68         A\n","4    5  Prague17      Luk ? Mr zek  ...   1.36          2.74         A\n","..  ..       ...               ...  ...    ...           ...       ...\n","82  83  Prague17  Stefano Vegliani  ...   2.02          3.93         D\n","83  84  Prague17    Andrej Madliak  ...   1.94          3.93         D\n","84  85  Prague17        Yoi Ohsako  ...   1.94          3.94         D\n","85  86  Prague17        Simon Dunn  ...   2.05          3.95         D\n","86  87  Prague17       Pavel ?imek  ...   2.05          3.98         D\n","\n","[87 rows x 10 columns]"]},"metadata":{},"execution_count":34}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CVbLA64LqAyA","executionInfo":{"status":"ok","timestamp":1630960034169,"user_tz":300,"elapsed":18,"user":{"displayName":"Emmanuel Mosquera Casas","photoUrl":"","userId":"16600618469783398935"}},"outputId":"a8293d35-d8fd-4a57-e2e3-7a1bccaf3003"},"source":["datos_maraton[\"MarathonTime\"]"],"execution_count":35,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0     2.37\n","1     2.59\n","2     2.66\n","3     2.68\n","4     2.74\n","      ... \n","82    3.93\n","83    3.93\n","84    3.94\n","85    3.95\n","86    3.98\n","Name: MarathonTime, Length: 87, dtype: float64"]},"metadata":{},"execution_count":35}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YquffnlCqMby","executionInfo":{"status":"ok","timestamp":1630960036347,"user_tz":300,"elapsed":301,"user":{"displayName":"Emmanuel Mosquera Casas","photoUrl":"","userId":"16600618469783398935"}},"outputId":"98b0fba1-9b44-4825-b2fb-d7b5b3f09511"},"source":["datos_maraton.info()"],"execution_count":36,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 87 entries, 0 to 86\n","Data columns (total 10 columns):\n"," #   Column         Non-Null Count  Dtype  \n","---  ------         --------------  -----  \n"," 0   id             87 non-null     int64  \n"," 1   Marathon       87 non-null     object \n"," 2   Name           87 non-null     object \n"," 3   Category       81 non-null     object \n"," 4   km4week        87 non-null     float64\n"," 5   sp4week        87 non-null     float64\n"," 6   CrossTraining  13 non-null     object \n"," 7   Wall21         87 non-null     object \n"," 8   MarathonTime   87 non-null     float64\n"," 9   CATEGORY       87 non-null     object \n","dtypes: float64(3), int64(1), object(6)\n","memory usage: 6.9+ KB\n"]}]},{"cell_type":"markdown","metadata":{"id":"b_K8Au7tsOd0"},"source":["# Ejemplo1\n","\n","convertir algun campo a numerico"]},{"cell_type":"code","metadata":{"id":"c292bEgvra2Y","executionInfo":{"status":"ok","timestamp":1630960038695,"user_tz":300,"elapsed":83,"user":{"displayName":"Emmanuel Mosquera Casas","photoUrl":"","userId":"16600618469783398935"}}},"source":["datos_maraton['Wall21']=pd.to_numeric(datos_maraton['Wall21'],errors='coerce')"],"execution_count":37,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"gyfS3ghfsfCm"},"source":["ver informacion estadistica de las columnas numericas "]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"Naqmw1tysadw","executionInfo":{"status":"ok","timestamp":1630960040480,"user_tz":300,"elapsed":258,"user":{"displayName":"Emmanuel Mosquera Casas","photoUrl":"","userId":"16600618469783398935"}},"outputId":"08cb7c6e-a141-44b4-cb4c-4899fb6b6a96"},"source":["datos_maraton.describe()"],"execution_count":38,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>km4week</th>\n","      <th>sp4week</th>\n","      <th>Wall21</th>\n","      <th>MarathonTime</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>87.000000</td>\n","      <td>87.000000</td>\n","      <td>87.000000</td>\n","      <td>81.000000</td>\n","      <td>87.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>44.000000</td>\n","      <td>62.347126</td>\n","      <td>139.840706</td>\n","      <td>1.630617</td>\n","      <td>3.319080</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>25.258662</td>\n","      <td>26.956019</td>\n","      <td>1191.427864</td>\n","      <td>0.210490</td>\n","      <td>0.376923</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1.000000</td>\n","      <td>17.900000</td>\n","      <td>8.031414</td>\n","      <td>1.160000</td>\n","      <td>2.370000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>22.500000</td>\n","      <td>44.200000</td>\n","      <td>11.498168</td>\n","      <td>1.450000</td>\n","      <td>3.045000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>44.000000</td>\n","      <td>58.800000</td>\n","      <td>12.163424</td>\n","      <td>1.620000</td>\n","      <td>3.320000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>65.500000</td>\n","      <td>77.500000</td>\n","      <td>12.854036</td>\n","      <td>1.760000</td>\n","      <td>3.605000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>87.000000</td>\n","      <td>137.500000</td>\n","      <td>11125.000000</td>\n","      <td>2.050000</td>\n","      <td>3.980000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["              id     km4week       sp4week     Wall21  MarathonTime\n","count  87.000000   87.000000     87.000000  81.000000     87.000000\n","mean   44.000000   62.347126    139.840706   1.630617      3.319080\n","std    25.258662   26.956019   1191.427864   0.210490      0.376923\n","min     1.000000   17.900000      8.031414   1.160000      2.370000\n","25%    22.500000   44.200000     11.498168   1.450000      3.045000\n","50%    44.000000   58.800000     12.163424   1.620000      3.320000\n","75%    65.500000   77.500000     12.854036   1.760000      3.605000\n","max    87.000000  137.500000  11125.000000   2.050000      3.980000"]},"metadata":{},"execution_count":38}]},{"cell_type":"markdown","metadata":{"id":"mWOnCyfbtAPJ"},"source":["Preparando los datos \n","\n","\n"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"_YCg7G0OsnCg","executionInfo":{"status":"ok","timestamp":1630960043012,"user_tz":300,"elapsed":83,"user":{"displayName":"Emmanuel Mosquera Casas","photoUrl":"","userId":"16600618469783398935"}},"outputId":"02940037-dc68-4b33-c8f1-b0a3ffbc9c31"},"source":["datos_maraton = datos_maraton.drop(columns=['Name'])\n","datos_maraton = datos_maraton.drop(columns=['id'])\n","datos_maraton = datos_maraton.drop(columns=['Marathon'])\n","datos_maraton = datos_maraton.drop(columns=['CATEGORY'])\n","datos_maraton"],"execution_count":39,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Category</th>\n","      <th>km4week</th>\n","      <th>sp4week</th>\n","      <th>CrossTraining</th>\n","      <th>Wall21</th>\n","      <th>MarathonTime</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>MAM</td>\n","      <td>132.8</td>\n","      <td>14.434783</td>\n","      <td>NaN</td>\n","      <td>1.16</td>\n","      <td>2.37</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>MAM</td>\n","      <td>68.6</td>\n","      <td>13.674419</td>\n","      <td>NaN</td>\n","      <td>1.23</td>\n","      <td>2.59</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>MAM</td>\n","      <td>82.7</td>\n","      <td>13.520436</td>\n","      <td>NaN</td>\n","      <td>1.30</td>\n","      <td>2.66</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>M45</td>\n","      <td>137.5</td>\n","      <td>12.258544</td>\n","      <td>NaN</td>\n","      <td>1.32</td>\n","      <td>2.68</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>MAM</td>\n","      <td>84.6</td>\n","      <td>13.945055</td>\n","      <td>NaN</td>\n","      <td>1.36</td>\n","      <td>2.74</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>82</th>\n","      <td>M55</td>\n","      <td>50.0</td>\n","      <td>10.830325</td>\n","      <td>NaN</td>\n","      <td>2.02</td>\n","      <td>3.93</td>\n","    </tr>\n","    <tr>\n","      <th>83</th>\n","      <td>M40</td>\n","      <td>33.6</td>\n","      <td>10.130653</td>\n","      <td>ciclista 3h</td>\n","      <td>1.94</td>\n","      <td>3.93</td>\n","    </tr>\n","    <tr>\n","      <th>84</th>\n","      <td>M40</td>\n","      <td>55.4</td>\n","      <td>11.043189</td>\n","      <td>NaN</td>\n","      <td>1.94</td>\n","      <td>3.94</td>\n","    </tr>\n","    <tr>\n","      <th>85</th>\n","      <td>M45</td>\n","      <td>33.2</td>\n","      <td>11.066667</td>\n","      <td>NaN</td>\n","      <td>2.05</td>\n","      <td>3.95</td>\n","    </tr>\n","    <tr>\n","      <th>86</th>\n","      <td>M40</td>\n","      <td>17.9</td>\n","      <td>10.848485</td>\n","      <td>ciclista 5h</td>\n","      <td>2.05</td>\n","      <td>3.98</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>87 rows × 6 columns</p>\n","</div>"],"text/plain":["   Category  km4week    sp4week CrossTraining  Wall21  MarathonTime\n","0       MAM    132.8  14.434783           NaN    1.16          2.37\n","1       MAM     68.6  13.674419           NaN    1.23          2.59\n","2       MAM     82.7  13.520436           NaN    1.30          2.66\n","3       M45    137.5  12.258544           NaN    1.32          2.68\n","4       MAM     84.6  13.945055           NaN    1.36          2.74\n","..      ...      ...        ...           ...     ...           ...\n","82      M55     50.0  10.830325           NaN    2.02          3.93\n","83      M40     33.6  10.130653   ciclista 3h    1.94          3.93\n","84      M40     55.4  11.043189           NaN    1.94          3.94\n","85      M45     33.2  11.066667           NaN    2.05          3.95\n","86      M40     17.9  10.848485   ciclista 5h    2.05          3.98\n","\n","[87 rows x 6 columns]"]},"metadata":{},"execution_count":39}]},{"cell_type":"markdown","metadata":{"id":"gC58cOm5vfb_"},"source":["verificar si hay datos nulos y eliminar o rellenar"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QA-I6gySvjkH","executionInfo":{"status":"ok","timestamp":1630960046454,"user_tz":300,"elapsed":209,"user":{"displayName":"Emmanuel Mosquera Casas","photoUrl":"","userId":"16600618469783398935"}},"outputId":"68d82749-52ed-48c8-9a6a-f496c1d2db01"},"source":["datos_maraton.isna().sum()"],"execution_count":40,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Category          6\n","km4week           0\n","sp4week           0\n","CrossTraining    74\n","Wall21            6\n","MarathonTime      0\n","dtype: int64"]},"metadata":{},"execution_count":40}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"JiXuEXIZwNw8","executionInfo":{"status":"ok","timestamp":1630960048671,"user_tz":300,"elapsed":100,"user":{"displayName":"Emmanuel Mosquera Casas","photoUrl":"","userId":"16600618469783398935"}},"outputId":"bb02fc8a-1103-4a33-deb9-fd76b5c11100"},"source":["datos_maraton[\"CrossTraining\"]=datos_maraton[\"CrossTraining\"].fillna(0)\n","datos_maraton"],"execution_count":41,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Category</th>\n","      <th>km4week</th>\n","      <th>sp4week</th>\n","      <th>CrossTraining</th>\n","      <th>Wall21</th>\n","      <th>MarathonTime</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>MAM</td>\n","      <td>132.8</td>\n","      <td>14.434783</td>\n","      <td>0</td>\n","      <td>1.16</td>\n","      <td>2.37</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>MAM</td>\n","      <td>68.6</td>\n","      <td>13.674419</td>\n","      <td>0</td>\n","      <td>1.23</td>\n","      <td>2.59</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>MAM</td>\n","      <td>82.7</td>\n","      <td>13.520436</td>\n","      <td>0</td>\n","      <td>1.30</td>\n","      <td>2.66</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>M45</td>\n","      <td>137.5</td>\n","      <td>12.258544</td>\n","      <td>0</td>\n","      <td>1.32</td>\n","      <td>2.68</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>MAM</td>\n","      <td>84.6</td>\n","      <td>13.945055</td>\n","      <td>0</td>\n","      <td>1.36</td>\n","      <td>2.74</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>82</th>\n","      <td>M55</td>\n","      <td>50.0</td>\n","      <td>10.830325</td>\n","      <td>0</td>\n","      <td>2.02</td>\n","      <td>3.93</td>\n","    </tr>\n","    <tr>\n","      <th>83</th>\n","      <td>M40</td>\n","      <td>33.6</td>\n","      <td>10.130653</td>\n","      <td>ciclista 3h</td>\n","      <td>1.94</td>\n","      <td>3.93</td>\n","    </tr>\n","    <tr>\n","      <th>84</th>\n","      <td>M40</td>\n","      <td>55.4</td>\n","      <td>11.043189</td>\n","      <td>0</td>\n","      <td>1.94</td>\n","      <td>3.94</td>\n","    </tr>\n","    <tr>\n","      <th>85</th>\n","      <td>M45</td>\n","      <td>33.2</td>\n","      <td>11.066667</td>\n","      <td>0</td>\n","      <td>2.05</td>\n","      <td>3.95</td>\n","    </tr>\n","    <tr>\n","      <th>86</th>\n","      <td>M40</td>\n","      <td>17.9</td>\n","      <td>10.848485</td>\n","      <td>ciclista 5h</td>\n","      <td>2.05</td>\n","      <td>3.98</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>87 rows × 6 columns</p>\n","</div>"],"text/plain":["   Category  km4week    sp4week CrossTraining  Wall21  MarathonTime\n","0       MAM    132.8  14.434783             0    1.16          2.37\n","1       MAM     68.6  13.674419             0    1.23          2.59\n","2       MAM     82.7  13.520436             0    1.30          2.66\n","3       M45    137.5  12.258544             0    1.32          2.68\n","4       MAM     84.6  13.945055             0    1.36          2.74\n","..      ...      ...        ...           ...     ...           ...\n","82      M55     50.0  10.830325             0    2.02          3.93\n","83      M40     33.6  10.130653   ciclista 3h    1.94          3.93\n","84      M40     55.4  11.043189             0    1.94          3.94\n","85      M45     33.2  11.066667             0    2.05          3.95\n","86      M40     17.9  10.848485   ciclista 5h    2.05          3.98\n","\n","[87 rows x 6 columns]"]},"metadata":{},"execution_count":41}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_JDQSAR8y-xg","executionInfo":{"status":"ok","timestamp":1630960112271,"user_tz":300,"elapsed":347,"user":{"displayName":"Emmanuel Mosquera Casas","photoUrl":"","userId":"16600618469783398935"}},"outputId":"63798937-4e22-4b14-c6e8-787146a446d6"},"source":["datos_maraton.isna().sum()"],"execution_count":44,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Category         0\n","km4week          0\n","sp4week          0\n","CrossTraining    0\n","Wall21           0\n","MarathonTime     0\n","dtype: int64"]},"metadata":{},"execution_count":44}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"4turyhSlxCqh","executionInfo":{"status":"ok","timestamp":1630960054024,"user_tz":300,"elapsed":342,"user":{"displayName":"Emmanuel Mosquera Casas","photoUrl":"","userId":"16600618469783398935"}},"outputId":"3977d9d2-0ae4-4ab4-9fb2-34fc49632bf7"},"source":["datos_maraton=datos_maraton.dropna(how='any')\n","datos_maraton"],"execution_count":42,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Category</th>\n","      <th>km4week</th>\n","      <th>sp4week</th>\n","      <th>CrossTraining</th>\n","      <th>Wall21</th>\n","      <th>MarathonTime</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>MAM</td>\n","      <td>132.8</td>\n","      <td>14.434783</td>\n","      <td>0</td>\n","      <td>1.16</td>\n","      <td>2.37</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>MAM</td>\n","      <td>68.6</td>\n","      <td>13.674419</td>\n","      <td>0</td>\n","      <td>1.23</td>\n","      <td>2.59</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>MAM</td>\n","      <td>82.7</td>\n","      <td>13.520436</td>\n","      <td>0</td>\n","      <td>1.30</td>\n","      <td>2.66</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>M45</td>\n","      <td>137.5</td>\n","      <td>12.258544</td>\n","      <td>0</td>\n","      <td>1.32</td>\n","      <td>2.68</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>MAM</td>\n","      <td>84.6</td>\n","      <td>13.945055</td>\n","      <td>0</td>\n","      <td>1.36</td>\n","      <td>2.74</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>82</th>\n","      <td>M55</td>\n","      <td>50.0</td>\n","      <td>10.830325</td>\n","      <td>0</td>\n","      <td>2.02</td>\n","      <td>3.93</td>\n","    </tr>\n","    <tr>\n","      <th>83</th>\n","      <td>M40</td>\n","      <td>33.6</td>\n","      <td>10.130653</td>\n","      <td>ciclista 3h</td>\n","      <td>1.94</td>\n","      <td>3.93</td>\n","    </tr>\n","    <tr>\n","      <th>84</th>\n","      <td>M40</td>\n","      <td>55.4</td>\n","      <td>11.043189</td>\n","      <td>0</td>\n","      <td>1.94</td>\n","      <td>3.94</td>\n","    </tr>\n","    <tr>\n","      <th>85</th>\n","      <td>M45</td>\n","      <td>33.2</td>\n","      <td>11.066667</td>\n","      <td>0</td>\n","      <td>2.05</td>\n","      <td>3.95</td>\n","    </tr>\n","    <tr>\n","      <th>86</th>\n","      <td>M40</td>\n","      <td>17.9</td>\n","      <td>10.848485</td>\n","      <td>ciclista 5h</td>\n","      <td>2.05</td>\n","      <td>3.98</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>81 rows × 6 columns</p>\n","</div>"],"text/plain":["   Category  km4week    sp4week CrossTraining  Wall21  MarathonTime\n","0       MAM    132.8  14.434783             0    1.16          2.37\n","1       MAM     68.6  13.674419             0    1.23          2.59\n","2       MAM     82.7  13.520436             0    1.30          2.66\n","3       M45    137.5  12.258544             0    1.32          2.68\n","4       MAM     84.6  13.945055             0    1.36          2.74\n","..      ...      ...        ...           ...     ...           ...\n","82      M55     50.0  10.830325             0    2.02          3.93\n","83      M40     33.6  10.130653   ciclista 3h    1.94          3.93\n","84      M40     55.4  11.043189             0    1.94          3.94\n","85      M45     33.2  11.066667             0    2.05          3.95\n","86      M40     17.9  10.848485   ciclista 5h    2.05          3.98\n","\n","[81 rows x 6 columns]"]},"metadata":{},"execution_count":42}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hXWdmuFZxWqL","executionInfo":{"status":"ok","timestamp":1630960059275,"user_tz":300,"elapsed":227,"user":{"displayName":"Emmanuel Mosquera Casas","photoUrl":"","userId":"16600618469783398935"}},"outputId":"c3f6dbf0-8aef-4c5c-afe2-238f416153d8"},"source":["datos_maraton.isna().sum()"],"execution_count":43,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Category         0\n","km4week          0\n","sp4week          0\n","CrossTraining    0\n","Wall21           0\n","MarathonTime     0\n","dtype: int64"]},"metadata":{},"execution_count":43}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EKrJjAUVyZ8i","executionInfo":{"status":"ok","timestamp":1630959979107,"user_tz":300,"elapsed":411,"user":{"displayName":"Emmanuel Mosquera Casas","photoUrl":"","userId":"16600618469783398935"}},"outputId":"4db0e63e-96a3-4710-f399-d16f58a47832"},"source":["datos_maraton['CrossTraining'].unique()"],"execution_count":32,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0, 'ciclista 1h', 'ciclista 4h', 'ciclista 13h', 'ciclista 3h',\n","       'ciclista 5h'], dtype=object)"]},"metadata":{},"execution_count":32}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":554},"id":"Zt_7Zwn2zzhz","executionInfo":{"status":"ok","timestamp":1630960576385,"user_tz":300,"elapsed":358,"user":{"displayName":"Emmanuel Mosquera Casas","photoUrl":"","userId":"16600618469783398935"}},"outputId":"4061bb16-da3c-4365-e4af-12bbdd6c5c0e"},"source":["valores_cross={\"CrossTraining\":{'ciclista 1h':1 ,'ciclista 3h':2,'ciclista 4h':3,'ciclista 5h':4,'ciclista 13h':5}}\n","datos_maraton.replace(valores_cross, inplace=True)\n","datos_maraton"],"execution_count":46,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:1743: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  isetter(ilocs[0], value)\n"]},{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Category</th>\n","      <th>km4week</th>\n","      <th>sp4week</th>\n","      <th>CrossTraining</th>\n","      <th>Wall21</th>\n","      <th>MarathonTime</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>MAM</td>\n","      <td>132.8</td>\n","      <td>14.434783</td>\n","      <td>0</td>\n","      <td>1.16</td>\n","      <td>2.37</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>MAM</td>\n","      <td>68.6</td>\n","      <td>13.674419</td>\n","      <td>0</td>\n","      <td>1.23</td>\n","      <td>2.59</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>MAM</td>\n","      <td>82.7</td>\n","      <td>13.520436</td>\n","      <td>0</td>\n","      <td>1.30</td>\n","      <td>2.66</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>M45</td>\n","      <td>137.5</td>\n","      <td>12.258544</td>\n","      <td>0</td>\n","      <td>1.32</td>\n","      <td>2.68</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>MAM</td>\n","      <td>84.6</td>\n","      <td>13.945055</td>\n","      <td>0</td>\n","      <td>1.36</td>\n","      <td>2.74</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>82</th>\n","      <td>M55</td>\n","      <td>50.0</td>\n","      <td>10.830325</td>\n","      <td>0</td>\n","      <td>2.02</td>\n","      <td>3.93</td>\n","    </tr>\n","    <tr>\n","      <th>83</th>\n","      <td>M40</td>\n","      <td>33.6</td>\n","      <td>10.130653</td>\n","      <td>2</td>\n","      <td>1.94</td>\n","      <td>3.93</td>\n","    </tr>\n","    <tr>\n","      <th>84</th>\n","      <td>M40</td>\n","      <td>55.4</td>\n","      <td>11.043189</td>\n","      <td>0</td>\n","      <td>1.94</td>\n","      <td>3.94</td>\n","    </tr>\n","    <tr>\n","      <th>85</th>\n","      <td>M45</td>\n","      <td>33.2</td>\n","      <td>11.066667</td>\n","      <td>0</td>\n","      <td>2.05</td>\n","      <td>3.95</td>\n","    </tr>\n","    <tr>\n","      <th>86</th>\n","      <td>M40</td>\n","      <td>17.9</td>\n","      <td>10.848485</td>\n","      <td>4</td>\n","      <td>2.05</td>\n","      <td>3.98</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>81 rows × 6 columns</p>\n","</div>"],"text/plain":["   Category  km4week    sp4week  CrossTraining  Wall21  MarathonTime\n","0       MAM    132.8  14.434783              0    1.16          2.37\n","1       MAM     68.6  13.674419              0    1.23          2.59\n","2       MAM     82.7  13.520436              0    1.30          2.66\n","3       M45    137.5  12.258544              0    1.32          2.68\n","4       MAM     84.6  13.945055              0    1.36          2.74\n","..      ...      ...        ...            ...     ...           ...\n","82      M55     50.0  10.830325              0    2.02          3.93\n","83      M40     33.6  10.130653              2    1.94          3.93\n","84      M40     55.4  11.043189              0    1.94          3.94\n","85      M45     33.2  11.066667              0    2.05          3.95\n","86      M40     17.9  10.848485              4    2.05          3.98\n","\n","[81 rows x 6 columns]"]},"metadata":{},"execution_count":46}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"muirGkHN0-c7","executionInfo":{"status":"ok","timestamp":1630960666704,"user_tz":300,"elapsed":333,"user":{"displayName":"Emmanuel Mosquera Casas","photoUrl":"","userId":"16600618469783398935"}},"outputId":"cc279389-ed38-4506-fe76-41d5f4cf461e"},"source":["datos_maraton['Category'].unique()"],"execution_count":47,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['MAM', 'M45', 'M40', 'M50', 'M55', 'WAM'], dtype=object)"]},"metadata":{},"execution_count":47}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":554},"id":"ABfreB6p1VFN","executionInfo":{"status":"ok","timestamp":1630960755090,"user_tz":300,"elapsed":368,"user":{"displayName":"Emmanuel Mosquera Casas","photoUrl":"","userId":"16600618469783398935"}},"outputId":"2818c2dd-4ef5-4edc-a28c-33dc3314fb1c"},"source":["valores_cross={\"Category\":{'MAM':1 ,'M45':2,'M50':3,'M55':4,'WAM':5}}\n","datos_maraton.replace(valores_cross, inplace=True)\n","datos_maraton"],"execution_count":48,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:1743: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  isetter(ilocs[0], value)\n"]},{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Category</th>\n","      <th>km4week</th>\n","      <th>sp4week</th>\n","      <th>CrossTraining</th>\n","      <th>Wall21</th>\n","      <th>MarathonTime</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>132.8</td>\n","      <td>14.434783</td>\n","      <td>0</td>\n","      <td>1.16</td>\n","      <td>2.37</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>68.6</td>\n","      <td>13.674419</td>\n","      <td>0</td>\n","      <td>1.23</td>\n","      <td>2.59</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1</td>\n","      <td>82.7</td>\n","      <td>13.520436</td>\n","      <td>0</td>\n","      <td>1.30</td>\n","      <td>2.66</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2</td>\n","      <td>137.5</td>\n","      <td>12.258544</td>\n","      <td>0</td>\n","      <td>1.32</td>\n","      <td>2.68</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>84.6</td>\n","      <td>13.945055</td>\n","      <td>0</td>\n","      <td>1.36</td>\n","      <td>2.74</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>82</th>\n","      <td>4</td>\n","      <td>50.0</td>\n","      <td>10.830325</td>\n","      <td>0</td>\n","      <td>2.02</td>\n","      <td>3.93</td>\n","    </tr>\n","    <tr>\n","      <th>83</th>\n","      <td>M40</td>\n","      <td>33.6</td>\n","      <td>10.130653</td>\n","      <td>2</td>\n","      <td>1.94</td>\n","      <td>3.93</td>\n","    </tr>\n","    <tr>\n","      <th>84</th>\n","      <td>M40</td>\n","      <td>55.4</td>\n","      <td>11.043189</td>\n","      <td>0</td>\n","      <td>1.94</td>\n","      <td>3.94</td>\n","    </tr>\n","    <tr>\n","      <th>85</th>\n","      <td>2</td>\n","      <td>33.2</td>\n","      <td>11.066667</td>\n","      <td>0</td>\n","      <td>2.05</td>\n","      <td>3.95</td>\n","    </tr>\n","    <tr>\n","      <th>86</th>\n","      <td>M40</td>\n","      <td>17.9</td>\n","      <td>10.848485</td>\n","      <td>4</td>\n","      <td>2.05</td>\n","      <td>3.98</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>81 rows × 6 columns</p>\n","</div>"],"text/plain":["   Category  km4week    sp4week  CrossTraining  Wall21  MarathonTime\n","0         1    132.8  14.434783              0    1.16          2.37\n","1         1     68.6  13.674419              0    1.23          2.59\n","2         1     82.7  13.520436              0    1.30          2.66\n","3         2    137.5  12.258544              0    1.32          2.68\n","4         1     84.6  13.945055              0    1.36          2.74\n","..      ...      ...        ...            ...     ...           ...\n","82        4     50.0  10.830325              0    2.02          3.93\n","83      M40     33.6  10.130653              2    1.94          3.93\n","84      M40     55.4  11.043189              0    1.94          3.94\n","85        2     33.2  11.066667              0    2.05          3.95\n","86      M40     17.9  10.848485              4    2.05          3.98\n","\n","[81 rows x 6 columns]"]},"metadata":{},"execution_count":48}]},{"cell_type":"markdown","metadata":{"id":"wkBJ_2S9_GXm"},"source":["#Entrenamiento"]},{"cell_type":"markdown","metadata":{"id":"JCPYPpXT_Jns"},"source":["Revisar la correlacion entre la variable principal y las demas "]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":295},"id":"IdJjwH-Q_F9Y","executionInfo":{"status":"ok","timestamp":1630963496579,"user_tz":300,"elapsed":653,"user":{"displayName":"Emmanuel Mosquera Casas","photoUrl":"","userId":"16600618469783398935"}},"outputId":"a03c54ee-49c6-485f-d559-cecf1f846c13"},"source":["import matplotlib.pyplot as plt\n","plt.scatter(x=datos_maraton['km4week'],y=datos_maraton['MarathonTime'])\n","plt.title('km4week Vs Marathon Time')\n","plt.xlabel('km4week')\n","plt.ylabel('Marathon Time')\n","plt.show()"],"execution_count":49,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":295},"id":"0RC6CoRgBBYk","executionInfo":{"status":"ok","timestamp":1630963822180,"user_tz":300,"elapsed":223,"user":{"displayName":"Emmanuel Mosquera Casas","photoUrl":"","userId":"16600618469783398935"}},"outputId":"451f90ca-6838-41e1-affa-ab7d0f20b450"},"source":["plt.scatter(x=datos_maraton['sp4week'],y=datos_maraton['MarathonTime'])\n","plt.title('sp4week Vs Marathon Time')\n","plt.xlabel('sp4week')\n","plt.ylabel('Marathon Time')\n","plt.show()"],"execution_count":50,"outputs":[{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":295},"id":"3vpu8g-VBRCX","executionInfo":{"status":"ok","timestamp":1630963869902,"user_tz":300,"elapsed":493,"user":{"displayName":"Emmanuel Mosquera Casas","photoUrl":"","userId":"16600618469783398935"}},"outputId":"af6cbe2f-18ed-4bff-9e9c-eb427e5f858c"},"source":["datos_maraton=datos_maraton.query('sp4week<2000')\n","plt.scatter(x=datos_maraton['sp4week'],y=datos_maraton['MarathonTime'])\n","plt.title('sp4week Vs Marathon Time')\n","plt.xlabel('sp4week')\n","plt.ylabel('Marathon Time')\n","plt.show()"],"execution_count":51,"outputs":[{"output_type":"display_data","data":{"image/png":"iVBORw0KGgoAAAANSUhEUgAAAYIAAAEWCAYAAABrDZDcAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAgAElEQVR4nO3dfZxcZXn/8c83yQoLiayYVWAhBAWxCprIqtioRVBDwULEB0Sw2Frpz/oAiinB+oOAWkJjwfbnU2OpgOJjxBhBDJRnKEQSkhAIYlEguIBEIUAk4JJcvz/OGZjMzszO7M6Zp/N9v17zysw5Z85cM0nOdc593+e6FRGYmVl+TWh1AGZm1lpOBGZmOedEYGaWc04EZmY550RgZpZzTgRmZjnnRGAdS9I1kv6u1XG0iqQPSrqhDeLYJOklrY7Dxs6JwMZN0j6SnpL07VbHUo6kn0s6s8zyIyU9JGlSHfv6oKSQdG6ZfYWk8xsQcrnPnZ7uv+ZYG/S509IDfeERkv5Y9PpNETE5In7TzLissZwIrBG+AtzS6iCquAA4TpJKln8AuCginqlzf78G3ltyUD4e+NVYA5Q0cazvzVJErE8P9JMjYnK6+NVFy65vaYDWEE4EhqRTJA1JekLSXZIOSZfPl7RY0vfTdbdKenXJe98HbASuLFl+n6QD0ufHpmeSr0xff0jSkvT5BEnzJP1a0h8k/UDSzkX7OVDS/0jaKGmNpIMqfIddJd0maW6Z1UuAFwJvKtr+BcA7gAvT14dJWpd+zyFJn67ykz0ErAVmp+/dGfhzYGlJTD9Mrzgek3Rd4fun686X9DVJP5P0R+Atkg6XtErS45LulzS/aHfXpX9uTM/E31C0ry9KelTSPZL+smj5bpKWSnpE0t2SPly0bn76W1+Yfuc7JA1W+c4VpX+3exd9r69KuiyN80ZJu0j6UhrjLyXNLInxR5I2pPF/Yiwx2Pg4EeScpH2BjwGvjYgpJAe3e4s2ORL4IbAz8B1giaSe9L3PB84EPlVm19cCB6XP/wL4DfDmotfXps8/DsxJl+0GPEpyhYGkAeBS4PPp538a+JGk/pLvsFe6vy9HxMLSQCJiM/AD4K+LFr8X+GVErElfnwf8ffob7AdcVeY7FbuwaH/vA34CPF2yzWXAPsCLgFuBi0rWvx/4AjAFuAH4Y7rPPuBw4COS5qTbFn67vvRM/Kb09euBu4CpwL8A5xVd+XwP+C3J7/pu4J8lHVz0+Uek2/SRJLEvj/Kda/Ve4LNpTE8DN5F8/6nAYuAcSE4CgJ8Ca4AB4BDgJEmzGxSH1Soi/MjxA9gbeBh4K9BTsm4+cHPR6wnAg8Cb0tf/BpxStO23i7b9ELA0fX4n8HfA99LX9wGvKVp3SNH7dgWGgUnAKcC3SmJaBhyfPr+G5KByL3DMKN/zjSRXLtunr28EPlm0fj3w98DzR9nPB0kO2r3A74CdgJuBWSQJ6/wK7+sDAtgpfX0+cOEon/Ul4Nz0+fT0/ZNKYrm76PUO6Ta7AHsAW4ApRevPKsSX/n39d9G6VwCba/j3EsDelZal3+sbRes+DtxZ9Hp/YGP6/PXA+pJ9nQp8s9X/L/L28BVBzkXE3cBJJAeGhyV9T9JuRZvcX7TtVtIzTEkzSJLHNp2mRa4F3iRpV2AiyRn5LEnTSQ6eq9Pt9gR+nDb9bCRJDFuAF6fr3lNYl65/I0myKDgWGCI506z2PW8Afg/MkfRS4HUkVzgF7wIOA+6TdG1x00uF/W0muVr5LPDCiLixeL2kiZIWpE1ej/PcVdbUos3uL3nP6yVdnTaTPAb8n5Lty3moKKYn06eTSa4CHomIJ4q2vY/kzHvEe4Enge3VmM7o3xU931zmdaGvYU+Sf0vFf7+fIfm7tyZyIjAi4jsR8UaS/5gBnF20eo/Ck/RSfnfgAZJmn+nAekkPkTTbvEvSrek+7yY5uHwcuC4iHic58JwA3JAmFUgOhn8ZEX1Fj+0jYihd962SdTtGxIKi+OaTHOC/o9E7XAvNOccByyLi2QNURNwSEUeSNOMsIUlco7kQOBkoN1rq/STNam8lSXzT0+XFHdalpX+/Q9JEs0dE7AR8vWj7essEPwDsLGlK0bJpJEmzXdwP3FPy9zslIg5rdWB540SQc5L2lXSwpO2Ap0jO2LYWbXKApKPSM8WTSNp8bwYWAS8FZqSPr5OcIRe3715L0v9Q6A+4puQ16fu+IGnPNJ5+SUem674N/JWk2ekZ9vaSDpK0e9H7h4H3ADsCF6bJqpILSQ7MHyYZSVT4DZ6npEN7p4gYBh4v+Q0quRZ4G/D/yqybQvJb/YGkyeafa9jfFJKz+KckvY4kmRRsSGOqabx+RNwP/A9wVvq7vYqkua6dhvj+AnhCyWCF3vTveD9Jr211YHnjRGDbAQtIzqofIjkjPrVo/U+Ao0k6cT8AHBURwxHxZEQ8VHgAm4CnImJD0XuvJTm4XVfhNST9DEuByyU9QZJkXg/PHsyOJGku2EByBjmXkn+3EfEn4CiSJoX/qpQMIuJekoPjjpSM8Em/271pM87/IWlyqioSV0bEI2VWX0jSFDMErEu/12j+ATgz/R1Oo+iqJG32+QJwY9qMcmAN+zuG5ErkAeDHwOkR8d81vK8pImILycitGcA9JP8G/5PkCsqaSBGemMbKS4cv7h0Rx7U6FjPLjq8IzMxyzonAzCzn3DRkZpZzviIwM8u5plYybISpU6fG9OnTWx2GmVlHWbly5e8jor/cuo5LBNOnT2fFihWtDsPMrKNIuq/SOjcNmZnlnBOBmVnOORGYmeVc5okgrR+yStIlZdZtp2TSk7slLU8rU5qZWRM144rgRJLSwuV8CHg0IvYmKWd8doXtzMwsI5kmgrRK5OEkhaTKOZLnqkAuBg4pml3JbEyWrBpi1oKr2GvepcxacBVLVrVT5WWz9pP1FcGXgH+kcknfAdLJOSKZQPwxkrlltyHpBEkrJK3YsGFD6WqzZy1ZNcSpF69laONmAhjauJlTL17rZGBWRWaJQNI7gIcjYuV49xURiyJiMCIG+/vL3g9hBsDCZXexeXjLNss2D29h4bK7WhSRWfvL8opgFnCEpHtJJsg+WFLppBhDpDNgpROf7EQykYfZmDywcXNdy80sw0QQEadGxO4RMR14H3BVmbr2S4Hj0+fvTrdxFTwbs936emte7r4Es0TT7yOQdKakI9KX5wEvlHQ38ClgXrPjse4yd/a+9PZsO3Vxb89E5s7ed5tln12ylk9+f7X7EsxoUq2hiLiGZL5aIuK0ouVPkcw3a11kyaohFi67iwc2bma3vl7mzt6XOTMHmvb5202a8Gw/wQt26OH0v3rlNp+/ZNUQF928fsRs8IW+hGbGatYOOq7onLW3wqidwoG4cKYNZH6ALf1sgKeGRw5YW7jsrhFJoMB9CZZHLjFhDdXKUTu1fna1g32lPgazbuZEYA3VylE7tX52pYO9YERfglkeOBFYQ9UzaqdVn12uQ1nAsQdOa2r/gEctWbtwIrCGqnXUTis/e87MAc46an8G+noRMNDXy7lHz+Dzc/Zv2sHZd0BbO3FnsTVU4Yy6FaOG6vnsOTMHRixvZkd3tf4Mj1qyZnMisIYrd5DthM9u5sHZd0BbO3EisFwqd69DMw/Ou/X1MlRmvx61ZK3gPgLLnUrt83079JTdPouDcyv7UsxK+YrAcqdSE9B2kybQ2zNxm3VZHZxb2ZdiVsqJwHKnUlPPY5uHOffoGU07OLeyL8WsmBOB5U619nkfnC2P3EdgueP2ebNt+YrAcsft82bbciKwXHITkNlzMksEkrYHrgO2Sz9ncUScXrLNNOACoA+YCMyLiJ9lFVO9Wl1X38ysGbK8IngaODgiNknqAW6QdFlE3Fy0zWeBH0TE1yS9AvgZMD3DmGrWyrr6ZmbNlOWcxRERm9KXPemjdD6QAJ6fPt8JeCCreOrVyrr6ZmbNlGkfgaSJwEpgb+ArEbG8ZJP5wOWSPg7sCLy1wn5OAE4AmDZtWmbxFnMtGGsnbqa0LGU6fDQitkTEDGB34HWS9ivZ5Bjg/IjYHTgM+JakETFFxKKIGIyIwf7+/ixDflYr6+qbFXPJastaU+4jiIiNwNXAoSWrPgT8IN3mJmB7YGozYhqNx5rbWGQxn4GbKS1rmSUCSf2S+tLnvcDbgF+WbLYeOCTd5s9IEsGGrGKqR7nJS846an9fjltFWZ25u5nSspZlH8GuwAVpP8EEktFBl0g6E1gREUuBk4FvSPokScfxByOitEO5ZTzW3OqR1XwGLlltWcssEUTEbcDMMstPK3q+DpiVVQxmzZTVmfvc2ftuM5QZ3ExpjeVaQ2YNktUAAzdTWtZcYsKsQbI8c3czpWXJicCsQVzMzjqVE4FZA/nM3TqR+wjMzHLOVwRmDTJaGQiXibB25URgNg6Fg/vQxs2I56oqllardTVba2duGjIbo+I7iWFkad3iMhBZl4nIorSF5YevCMzGqNzBvVThZrIsy0T4asPGy1cEZmNUy0G8cDNZltVsXZTOxsuJwLpalk0mox3Ei28my7KarYvS2Xi5aci6VqUmkxX3PcLVv9xQ8+idSqN9yt1JXOgwHijZb5Y3m7konY2XE4F1rUpNJhfdvL7i6J5StbS/13pwz+pmMxels/FyIrCuValppNLonnIH6dFKS9dzcM/qPgKXtrDxciKwrlWpyaScetvZ621/z3pkj0tb2Hi4s9i6VrkOWlXYtt5RPfW2v3tkj7WzLKeq3F7SLyStkXSHpDMqbPdeSevSbb6TVTyWP+Xq+B974LS6Ru80arSPR/ZYO8uyaehp4OCI2CSpB7hB0mURcXNhA0n7AKcCsyLiUUkvyjAey6FyTSaDe+5cVwcvjL/9vVIzVQCzFlzlNn1rKTVjimBJOwA3AB+JiOVFy/8F+FVE/Get+xocHIwVK1ZkEKVZdkr7CEr19kz0rGOWKUkrI2Kw3LpM+wgkTZS0GngYuKI4CaReBrxM0o2SbpZ0aIX9nCBphaQVGzZsyDJks0wUN1OV4/4Ca6VME0FEbImIGcDuwOsk7VeyySRgH+Ag4BjgG5L6yuxnUUQMRsRgf39/liGbZWbOzAFunHdwxQ5r9xdYqzRl+GhEbJR0NXAocHvRqt8CyyNiGLhH0q9IEsMtzYjLrBlK7x/o26GHR58cHrFdlncCey4EqyazRCCpHxhOk0Av8Dbg7JLNlpBcCXxT0lSSpqLfZBWT5VMrJ4wpd/9AzwTRM1EMb3mufy7LO4FdndRGk2XT0K7A1ZJuIznDvyIiLpF0pqQj0m2WAX+QtA64GpgbEX/IMCbLmeI5A4LnDoKF4nOjrR+vcvcPDG8NdnzepG2GtWbZUex7GGw0mV0RRMRtwMwyy08reh7Ap9KHWcONViJitPXjVand/7HNw6w+/e3j3v94YnCfhBX4zmLraqMdBLM+SGY5D0EnxWDtzYnAulqlg90Eib3mXcoElR/D06iDZJbzEGQdg6e/zA8nAutq5Q6CAFsiiPTPUo0+UG836bn/Zi/YoafpN46VK7UxWgxZ951Ye3H1UetqpSUiJkhlD/4TJbZGNHTUULm7iZ8a3jqu/Y11dFO91Ukb2Xfioavtz4nAul7xQXCveZeW3WZrBPcsOLyhn9vog2kzh4B2Svltaww3DVmuNLPjtJEd0c0eAury2/niRGC50szO20YmnWYPAXX57XxxIrBcGUvH6VhVO5jWOyKn2UNAG/U7eehqZ2hKGepGchnq1nLHX33K/V5A2cnmqx1oy3U8d0Lp6k6NuxtVK0PtzmKrmTv+6ldutM6sBVfV3YncqRPUd2rceTNqIpAk4FjgJRFxpqRpwC4R8YvMo7O2knU5hrwYa7t5p05Q36lx50ktfQRfBd5AUiUU4AngK5lFZG3LHX+N4XZzaze1JILXR8RHgacAIuJR4HmZRmVtyQewxmiHshNmxWpJBMOSJpLMs12YZ2Dst0dax/IBrDGaOXLJrBa1dBb/O/Bj4EWSvgC8G/hsplFZW3LHX+O43dzaSU3DRyW9HDgEEHBlRNxZw3u2B64DtiNJOIsj4vQK274LWAy8NiKqjg318NHO4aGmZu2jEcNHfwdcn27fK+k1EXHrKO95Gjg4IjZJ6gFukHRZRNxcEtwU4ERgeY2xWAfwUFOzzlHL8NHPAR8Efk3aT5D+eXC196Wzj21KX/akj3KXH58jmct4bk0RW0fwUNPx8xWVNUstVwTvBV4aEX+qd+dpJ/NKYG/gKxGxvGT9a4A9IuJSSRUTgaQTgBMApk2bVm8Y1gIeajo+vqKyZqpl1NDtQN9Ydh4RWyJiBrA78DpJ+xXWSZoAnAOcXMN+FkXEYEQM9vf3jyUUazIPNR0fV+20ZqrliuAsYJWk20na/QGIiCNq/ZCI2CjpauBQksQCMAXYD7gmuXmZXYClko4YrcPY2t/c2fuWrTHjoaa1qeWKyk1H1ii1JIILSNrw11LH/QPp/QbDaRLoBd6W7geAiHgMmFq0/TXAp50EuoOHmo7Pbn29DJVJBoUrKjcdWSPVkgiejIh/H8O+dwUuSPsJJgA/iIhLJJ0JrIiIpWPYp3UQj5Ufu9GuqCo1HZ30/dUsXHaXk67VpZZEcL2ks4ClbNs0VHX4aETcBswss/y0CtsfVEMsZrkw2hVVtU53Xx1YvWpJBIWD+YFFy0YdPmpmldXSvl/tiqpS01HB5uEtnPHTO5wIrCajJoKIeEszAjHrNktWDXHGT+/g0SeHAejr7WH+Ea8EGHf7frmmo1KPPjnMklVDY04G7ozOj4olJiQdFxHflvSpcusj4pxMI6vAJSasEyxZNcTcxWsY3rLt/6+eCWLy9pOeTQ7FBvp6uXFe7RfahQN1tSuDevdZvG/PLNZdqpWYqHYfwQ7pn1MqPMysgoXL7hqRBACGt0bZJAD132w3Z+YAN847mC8dPaPiNmO9gc/3MeRLtaahPwcWRcQZzQrGrFuM5QA81pvt5swcYP7SO9i4eWSCGes+fWd4vlS7InhV06Iw6zLVDsB9vT0Nn9dh/hGvbOg+fWd4vlS7IthB0kyS0tMj1FB91Cy35s7et2IfQaHDuJEdsZWGmwLMWnBV3Z9T6T6Gt7y8f0z7s/ZWrbP4CeAWyieCiIiWDB91Z7F1ikqjhpp14Bxvh2/pqKG3vLyfH60ccgdyh6rWWVwtEayKiBE3hLWaE4FZbWYtuKrsiKKxjiRq9P6sucY6asjMOlijO3zdgdy9qvURnNK0KKzj+eaj9jNa4bpW78/aR8Urgoi4vJmBWOcqtEUPbdxM8NydsktWDbU6tK62ZNUQsxZcxV7zLmXWgqtG/N5zZ+/b0JFEjd4fjP4drDlqnbPYrCJPS9l8pXcuD23czNzFa4DnRhA1uhR4o/fnUtrto2JncbtyZ3H72WvepWUnoxZwz4LDmx1OLsw88/Kydyi/YIceVp329hZEVD93PjdXtc7iWiavfxnJxPJ7Fm/fquGj1n7cdjx+9faxVCpTUWl5O3Lnc/uopWnoh8DXgW8AlUsdWm55WsrxKddE8snvr2bFfY/w+Tn7172/TrnhyycQ7aOW4aPPRMTXIuIXEbGy8BjtTZK2l/QLSWsk3SFpRM0iSZ+StE7SbZKulLTnmL6FtdScmQOcddT+DPT1IpJLe99kVLtyfSwBXHTz+oqdp329PRX31ymd9ll0PtvYjNpHIGk+8DDwY7adoeyRUd4nYMeI2CSpB7gBODEibi7a5i3A8oh4UtJHgIMi4uhq+3UfgXWbSn0sULm9fMmqIeb+cA3DW0fv46vW5t7qYb/FpbQnSmyJYKDNr2Q61bj6CIDj0z/nFi0L4CXV3hRJhtmUvuxJH1GyzdVFL28GjqshHrOuUm22sUrt5eVG8NS7j3YYtVP4nFbHkXejNg1FxF5lHlWTQIGkiZJWk1xRXBERy6ts/iHgsgr7OUHSCkkrNmzYUMtHm3WMubP3LV/Zkert5YX5CO5ZcDg3zjuYgTorhrbLnAPtEkeejZoIJPVI+oSkxenjY2lTz6giYktEzAB2B14nab8Kn3EcMAgsrLCfRRExGBGD/f39tXy0WceYM3OAYw+cNiIZ1NteXm+be7uM2mmXOPKslqahr5E063w1ff2BdNnf1fohEbFR0tXAocDtxeskvRX4J+AvIuLpcu836wbV2uM/P2d/BvfceVzt9fXe8NUuo3baJY48qyURvDYiXl30+ipJa0Z7k6R+YDhNAr3A24CzS7aZCfwHcGhEPFxH3GYdpZb2+DkzB8bdJl7PPrIY9juWzmcPP269WhLBFkkvjYhfA0h6CbXdT7ArcIGkiSRNUD+IiEsknQmsiIilJE1Bk4EfJoOMWB8RR4zli5i1s0rt4Cf/YNuyEM3ULiUjGh2H1a+W4aOHAN8EfkNSNWBP4G9KRvw0jYePWieqNkS0WyZ3ccmI9jau4aMRcaWkfYDCddpdbss3q0+14Z3dUqDPnb6dq9aJaQ4A9gNmAEdL+uvsQjLrPuVG9BQb68Gynco4e8L7zlXL8NFvAV8E3gi8Nn2Uvbwws/IKZTgmqvwdA2M5WLbbPBAuGdG5auksHgReEZ1Wr9qszZS7ixbGfrBs5TwQ1UYHudO389SSCG4HdgEezDgWs67XyINlq9rkRxsd5AN/56mYCCT9lKQ20BRgnaRfsG3ROQ/zNBuD8R4sC2fjlS7Rs26T94x03afaFcEXmxaFmdWk9Gy8VDPa5D06qPtUTAQRcS2ApLMj4pTidZLOBq7NODYzK1HubLygWeWbXRKi+9QyfPRtZZb9ZaMDMbPRVTrrFnDjvIOb0jTj0UHdp1ofwUeAfwBeIum2olVTgP/JOjAzGynLs/Fa6wR5dFD3qdZH8B2S+QHOAuYVLX9itNnJzCwbWRVoq7dOkEcHdZdqfQSPAY8BxwBIehGwPTBZ0uSIWN+cEM2sIKuz8WaPBGr1FJm2rVHvI5D0V8A5wG4kM43tCdwJvDLb0MysnCzOxps5Eqgdpsi0bdXSWfx54EDgVxGxF3AIyfzCZtYlmlknyFNTtp9aEsFwRPwBmCBpQlp+2rWGzLpIM0cC+T6E9lNLiYmNkiYD1wEXSXoY+ONob5K0ffqe7dLPWRwRp5dssx1wIUl10z8AR0fEvXV9AzMbt2aOBPJ9CO2nlkRwJLAZ+CRwLLATcGYN73saODgiNqWT3d8g6bKIKG5W+hDwaETsLel9JFNZHl3XNzCzhmjWSCBPTdl+qiaCdJrJSyLiLcBW4IJad5xWK92UvuxJH6XlUY4E5qfPFwNfliRXOrU8ystIGt+H0H6qJoKI2CJpq6Sd0uGkdUkTyUpgb+ArEbG8ZJMB4P70s56R9BjwQuD39X6WWSfL20ga34fQXmppGtoErJV0BUV9AxHxidHeGBFbgBmS+oAfS9ovIm6vN0hJJwAnAEybNq3et5u1PVf0tFaqJRFcnD7GLCI2SroaOJRkfoOCIWAP4LeSJpH0P/yhzPsXAYsgmbx+PLGYtSOPpLFWqmXy+pr7BYpJ6icZerpRUi9J8bqzSzZbChwP3AS8G7jK/QOWRx5JY61Uy5zF+0haLGmdpN8UHjXse1fg6rRg3S3AFRFxiaQzJRUmtTkPeKGku4FPsW1NI7PccEVPa6Vamoa+CZwOnAu8BfgbakggEXEbMLPM8tOKnj8FvKfWYMcqL6MxrHN5JI21kkZriZG0MiIOkLQ2IvYvXtaUCEsMDg7GihUrat6+3IxOvT0TOeuo/f2fzHLPJ0n5kR63y1aFqKXExNOSJgD/K+ljkt4JTG5ohBlyXROz8gonSUMbNxM8N2R1yaqhVodmTVZLIjgR2AH4BEkpiA+QdPB2BI/GMCvPJ0lWUMuooVvSp5tI+gc6ikdjmJVX6WRoaONmlqwachNRFd3WpFZtqsql1d4YEUdUW98uXNfErLxKJ0lAV9/VPF6tuAs868RT7YrgDSTlH74LLCeZH7vjeDSGWXnlTpIK6rmrudvOjkfTitncsk481RLBLiQ3gR0DvB+4FPhuRNzRkE9uItc1MRup8H/ipO+vLru+ln60dq+RVE+SqnXbZvc7NiPxVOwsjogtEfHziDieZIayu4FrJH2sIZ9sZi03Z+YAA+OYnaydO5zrGRVVz7bNnM0NmpN4qo4akrSdpKOAbwMfBf4d+HHDPt3MWm48dzXXe5BasmqIWQuuYq95lzJrwVXbHGirrRuLepJUPds2+y7wZiSeap3FFwL7AT8DzhhL1VAza3/j6UerZ1RetWYkgLmL1zC8JZ5dN3fxmm3iq1c9SaqebZvd79iMAS/V+giOIyk7fSLwCenZvmKRzDvz/IZFYWYtNdZ+tHoOUtXOup/80zPPJoGC4S3BGT+9Y8wH2HqSVL3DzJvZ79iMxFMxEURELTebmVkXqrXjtJ6DVLWz7kqFbh59cnjM36GeJNXuw8yzTjy1FJ0zsxypdyRQrQepamfdle5nGIviJLZTbw/b90xg45PDDUto3ciJwMy2kdVwxWpn3fOX3sHGzSPP/vt6e+r6jNIktnHzML09Ezn36Bmjxp7nYeZu/jGzbWQ1XHHOzAHOOmp/Bvp6ETDQ1/tsFeD5R7ySngnb3rPaM0HMP+KVdX1GOw9nbWe+IjCzbZpTJkhsKVOevhHDFSuddTeqacZFJscms0QgaQ/gQuDFQACLIuLfSrbZieQehWlpLF+MiG9mFZOZjVTanFIuCTSj47QRTTMuMjk2WTYNPQOcHBGvILkz+aOSXlGyzUeBdRHxauAg4F8lPS/DmMysRLnmFICJ0ogmnHbnKT/HJrMrgoh4EHgwff6EpDuBAWBd8WbAFCU3KUwGHiFJIGbWJJWaTbZGcM+Cw5sczfjkffTPWDWlj0DSdJL5i5eXrPoysBR4AJgCHB0RW8u8/wTgBIBp06ZlGapZ7nRic0q1+xzyPPpnrDIfNSRpMvAj4KSIeLxk9WxgNbAbMAP4sqQRdyxHxKKIGIyIwf7+/qxDNsuVTmtO8RSbjZdpIpDUQ5IELoqIi8ts8jfAxZG4G7gHeHmWMZnZtqoN62xHHiLaeFmOGhJwHnBnRJxTYbP1wCHA9ZJeDOwL/CarmMysvE5qTvEQ0cbLso9gFslE96tFz0QAAArFSURBVGslFWa++AzJUFEi4uvA54DzJa0lKWZ3SkT8PsOYzKzDjbdPI28zqtUiy1FDNzDK9JYR8QDw9qxiMLPuM54Cce0+o1qruMSEmXWU8fRpuH+hPJeYMLOOM9Y+DfcvlOcrAjPLjWbPN9wpnAjMLDc67Z6JZnHTkJnlhktQlOdEYGa50kn3TDSLE4FZl/D4eBsrJwKzLuDx8TYeTgRmXSCreYbbha92suVEYNYFunl8vK92sufho2ZdoJvHx/tu4Ow5EZh1gW4eH9/NVzvtwonArAt02pwC9ejmq5124T4Csy7RrePjx1Nt1GrjRGBmbc13A2fPicDM2l63Xu20i8z6CCTtIelqSesk3SHpxArbHSRpdbrNtVnFY2Zm5WV5RfAMcHJE3CppCrBS0hURsa6wgaQ+4KvAoRGxXtKLMozHzLqQbzYbvyynqnwQeDB9/oSkO4EBYF3RZu8HLo6I9el2D2cVj5l1H99s1hhNGT4qaTowE1hesuplwAskXSNppaS/rvD+EyStkLRiw4YN2QZrZh3DN5s1RuaJQNJk4EfASRHxeMnqScABwOHAbOD/SnpZ6T4iYlFEDEbEYH9/f9Yhm1mH8M1mjZFpIpDUQ5IELoqIi8ts8ltgWUT8MSJ+D1wHvDrLmMyse/hms8bIctSQgPOAOyPinAqb/QR4o6RJknYAXg/cmVVMZtZdurm0RjNlOWpoFvABYK2k1emyzwDTACLi6xFxp6SfA7cBW4H/jIjbM4zJzLqIbzZrDEVEq2Ooy+DgYKxYsaLVYZiZdRRJKyNisNw6F50zM8s5JwIzs5xzIjAzyzknAjOznHMiMDPLOScCM7OccyIwM8s5JwIzs5xzIjAzyzknAjOznHMiMDPLOScCM7OccyIwM8s5JwIzs5xzIjAzy7ksZyjbQ9LVktZJukPSiVW2fa2kZyS9O6t4zMysvCxnKHsGODkibpU0BVgp6YqIWFe8kaSJwNnA5RnGYmZmFWR2RRARD0bErenzJ0jmIi43f9zHSSa4fzirWMzMrLKm9BFImg7MBJaXLB8A3gl8bZT3nyBphaQVGzZsyCpMM7NcyrJpCABJk0nO+E+KiMdLVn8JOCUitkqquI+IWAQsgmTO4qxiNTMbiyWrhli47C4e2LiZ3fp6mTt7X+bMLNcA0p4yTQSSekiSwEURcXGZTQaB76VJYCpwmKRnImJJlnGZmTXKklVDnHrxWjYPbwFgaONmTr14LUDHJIMsRw0JOA+4MyLOKbdNROwVEdMjYjqwGPgHJwEz6yQLl931bBIo2Dy8hYXL7mpRRPXL8opgFvABYK2k1emyzwDTACLi6xl+tplZUzywcXNdy9tRZokgIm4AKjf8j9z+g1nFYmaWld36ehkqc9Dfra+3BdGMje8sNjMbh7mz96W3Z+I2y3p7JjJ39r4tiqh+mY8aMjPrZoUOYY8aMjPLsTkzBzrqwF/KTUNmZjnnRGBmlnNOBGZmOedEYGaWc04EZmY5p4jOquEmaQNw3xjeOhX4fYPDyZLjzVYnxdtJsYLjzdpY490zIvrLrei4RDBWklZExGCr46iV481WJ8XbSbGC481aFvG6acjMLOecCMzMci5PiWBRqwOok+PNVifF20mxguPNWsPjzU0fgZmZlZenKwIzMyvDicDMLOdykQgkfVLSHZJul/RdSdu3OqZKJJ2YxnmHpJNaHU85kv5L0sOSbi9atrOkKyT9b/rnC1oZY0GFWN+T/r5bJbXVsMEK8S6U9EtJt0n6saS+VsZYrEK8n0tjXS3pckm7tTLGYuXiLVp3sqSQNLUVsZVT4fedL2ko/X1XSzpsvJ/T9YlA0gDwCWAwIvYDJgLva21U5UnaD/gw8Drg1cA7JO3d2qjKOh84tGTZPODKiNgHuDJ93Q7OZ2SstwNHAdc1PZrRnc/IeK8A9ouIVwG/Ak5tdlBVnM/IeBdGxKsiYgZwCXBa06Oq7HxGxoukPYC3A+ubHdAozqdMvMC5ETEjffxsvB/S9YkgNQnolTQJ2AF4oMXxVPJnwPKIeDIingGuJTlgtZWIuA54pGTxkcAF6fMLgDlNDaqCcrFGxJ0R0ZYzi1eI9/L03wPAzcDuTQ+sggrxPl70ckegbUakVPi3C3Au8I+0UaxQNd6G6vpEEBFDwBdJMv2DwGMRcXlro6roduBNkl4oaQfgMGCPFsdUqxdHxIPp84eAF7cymC72t8BlrQ5iNJK+IOl+4Fja64pgBElHAkMRsabVsdThY2nz2381ohm26xNB+iMdCewF7AbsKOm41kZVXkTcCZwNXA78HFgNbGlpUGMQyZjktjqz6gaS/gl4Brio1bGMJiL+KSL2IIn1Y62Op5L0hOsztHmyKvE14KXADJKT238d7w67PhEAbwXuiYgNETEMXAz8eYtjqigizouIAyLizcCjJG3CneB3knYFSP98uMXxdBVJHwTeARwbnXXzz0XAu1odRBUvJTlJXCPpXpJmt1sl7dLSqKqIiN9FxJaI2Ap8g6RPcVzykAjWAwdK2kGSgEOAO1scU0WSXpT+OY2kf+A7rY2oZkuB49PnxwM/aWEsXUXSoSTt10dExJOtjmc0kvYpenkk8MtWxTKaiFgbES+KiOkRMR34LfCaiHioxaFVVDjhSr2TpEl5fCKi6x/AGST/GG8HvgVs1+qYqsR6PbAOWAMc0up4KsT4XZJL0mGS/zgfAl5IMlrof4H/BnZudZxVYn1n+vxp4HfAslbHOUq8dwP3kzQVrga+3uo4R4n3R+n/tduAnwIDrY6zWrwl6+8FprY6zlF+328Ba9Pfdymw63g/xyUmzMxyLg9NQ2ZmVoUTgZlZzjkRmJnlnBOBmVnOORGYmeWcE4FZjSS9K61OmVnFUkmbstq3WSVOBGY1kDQFOBFY3upYzBrNicBySdKOki6VtCad/+FoSfdK+hdJayX9oqQE+OdI6kA9VbSPSyW9Kn2+StJp6fMzJX04fT5X0i1pgbAzit57XPoZqyX9h6SJJfFNlXSTpMMz/BnMACcCy69DgQci4tWRzFPx83T5YxGxP/Bl4EsAkl4D7BERl5bs43qSarE7kRSDm5UufxNwnaS3A/uQ1IKZARwg6c2S/gw4GpgVSc3+LSRVOkk/78XApcBpZT7TrOGcCCyv1gJvk3S2pDdFxGPp8u8W/fkGSROAc4CTy+zjeuDNJAngUmByWs1yr0jmO3h7+lgF3Aq8nCQxHAIcANwiaXX6+iXpPntISnX8Y0Rc0cgvbFbJpFYHYNYKEfGr9Ez/MODzkq4srCreDJgC7Adck9QsZBdgqaQjgFuAQeA3JLOITSWZYW5l+n4BZ0XEfxR/tqSPAxdERLmZxp5J3z+bZGIis8z5isByKZ1H98mI+DawEHhNuurooj9viojHImJqPFed8maSKqArIuJPJMXg3gPcRHKF8GmemwJzGfC3kiannzmQVpe9Enh3UaXZnSXtmb4nSCafebmkU7L6/mbFfEVgebU/sFDSVpLKjh8BFgMvkHQbSWXSY2rYz/UkVWI3S7qepJ799ZBMMZn2B9yUXk1sAo6LiHWSPgtcnjY9DQMfBe5L37dF0jEkVx5PRMRXG/e1zUZy9VGzVDoxyWBE/L7VsZg1k5uGzMxyzlcEZmY55ysCM7OccyIwM8s5JwIzs5xzIjAzyzknAjOznPv/ZcCpCslMuh8AAAAASUVORK5CYII=\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":295},"id":"Y5tPXNivCko5","executionInfo":{"status":"ok","timestamp":1630964238688,"user_tz":300,"elapsed":232,"user":{"displayName":"Emmanuel Mosquera Casas","photoUrl":"","userId":"16600618469783398935"}},"outputId":"222900bf-7111-421c-c119-8cbd68af91cb"},"source":["plt.scatter(x=datos_maraton['Wall21'],y=datos_maraton['MarathonTime'])\n","plt.title('wall21 Vs Marathon Time')\n","plt.xlabel('wall21')\n","plt.ylabel('Marathon Time')\n","plt.show()"],"execution_count":53,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"1bYvmqDYC4ax","executionInfo":{"status":"ok","timestamp":1630964355210,"user_tz":300,"elapsed":190,"user":{"displayName":"Emmanuel Mosquera Casas","photoUrl":"","userId":"16600618469783398935"}}},"source":[""],"execution_count":56,"outputs":[]}]}